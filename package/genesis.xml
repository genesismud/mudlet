<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>WList</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Keeping track</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wear and wield</name>
					<script>
-- The triggers in this group interacts with a couple of scripts,
-- the ones under InfoScripts/Generic/Equipment
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wear epic armours</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wear Wrist Right</name>
							<script>bodyparts.wristRight.item = matches[2]
update_status()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (.+?) on your right wrist\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wear Wrist Left</name>
							<script>bodyparts.wristLeft.item = matches[2]
update_status()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (.+?) on your left wrist\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wear Finger Right</name>
							<script>bodyparts.fingerRight.item = matches[2]
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (.+?) on your right ring finger\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wear Finger Left</name>
							<script>bodyparts.fingerLeft.item = matches[2]
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (.+?) on your left ring finger\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wear Sholder Right</name>
							<script>bodyparts.shoulderRight.item = matches[2]
update_status()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (.+?) on your right shoulder\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wear Sholder Left</name>
							<script>bodyparts.shoulderLeft.item = matches[2]
update_status()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (.+?) on your left shoulder\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>full platemail</name>
							<script>bodyparts.shoulders.item = matches[2]
bodyparts.arms.item = matches[2]
bodyparts.legs.item = matches[2]
update_status()


[[--
thick rugged platemail:
Gritting your teeth, you hoist the thick rugged platemail on over your body
and secure the various pieces to your arms and legs. Once worn, it isn't quite 
as heavy feeling as when you were carrying it.
--
midnight black platemail:
Gritting your teeth, you hoist the midnight black platemail on over your body
and secure the various pieces to your arms and legs. You strain slightly as you 
move around, getting used to the immense weight that this armour has added to 
your frame.
--
deep-blue full plate armour:
You slowly don the deep-blue full plate armour carefully adjusting the straps,
that keep the metal plates together.
--

--]]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?Gritting your teeth, you hoist the (.+?) (on over|on|over|around) (both|your) (left|right|)? ?(\w+) and secure the various pieces to your arms and legs. (.*?).$</string>
								<string>^(?:&gt; )?You slowly don the (.+?) carefully adjusting the straps, that keep the metal plates together\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragonscales</name>
							<script>-- blue, red, white, green, black dragonscales cover
-- chest, back and arms.
bodyparts.shoulders.item = matches[2]
bodyparts.arms.item = matches[2]
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the (blue dragonscale|red dragonscale|white dragonscale|green dragonscale|black dragonscale) armour\.$</string>
								<string>^(?:&gt; )?You get an uneasy feeling as you wear the (blue dragonscale|red dragonscale|white dragonscale|green dragonscale|black dragonscale) armour over your shoulders(.*?)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>plate armour of Solamnus</name>
							<script>--plate armour of Solamnus
bodyparts.shoulders.item = "plate armour of Solamnus"
bodyparts.arms.item = "plate armour of Solamnus"
bodyparts.legs.item = "plate armour of Solamnus"
update_status()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the plate armour of Solamnus\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>earth-colored firebane cloak</name>
							<script>bodyparts.body.item = "earth-colored firebane cloak"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the earth-colored firebane cloak, drawing it tightly about your body\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pair of golden gauntlets</name>
							<script>bodyparts.arms.item = "pair of golden gauntlets"
bodyparts.hands.item = "pair of golden gauntlets"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You feel a sudden energy overwhelm you as you pull the pair of golden gauntlets over your arms and hands\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>snake-skin gloves</name>
							<script>bodyparts.hands.item = "snake-skin gloves"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#aaff00</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?As you wear the snake-skin gloves, a sense of ease and self-control falls over you and you feel very secure and focused.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pair of knee-high brown boots|dragon-hide boots</name>
							<script>--[[
pair of knee-high brown boots:
^(?:&gt; )?You slip into the pair of knee-high brown boots, feeling very comfortable\.$

pair of blue|black|etc dragon-hide boots:
^(?:&gt; )?You slip your feet into the pair of blue dragon-hide boots. They feel very
comfortable\.$
--]]

bodyparts.legs.item = matches[2]
bodyparts.feet.item = matches[2]
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You slip into the (.+?), feeling very comfortable\.$</string>
								<string>^(?:&gt; )?You slip your feet into the (.+?). They feel very comfortable\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>high boots</name>
							<script>bodyparts.legs.item = "pair of high boots"
bodyparts.feet.item = "pair of high boots"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You wear the pair of high boots\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>clear silver ring</name>
							<script>-- Problem: there is no indication on which finger
-- on puts the ring on and one can wear two clear rings,
-- so no easy way to assign ring to finger. 
-- For now let it be one clear ring on left finger...
bodyparts.fingerLeft.item = "clear silver ring"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?As you wear the clear silver ring on your finger a chill runs through your body\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ruby-eyed snake ring</name>
							<script>-- Problem: there is no indication on which finger
-- on puts the ring on and one can wear two rings,
-- so no easy way to assign ring to finger. 
-- For now let it be one ruby-snake ring on left finger...
bodyparts.fingerLeft.item = "ruby-eyed snake ring"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You slide the ruby-eyed snake ring onto your finger\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pair of black gloves with silver cuffs</name>
							<script>bodyparts.hands.item = "pair of black gloves with silver cuffs"
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You feel more dextrous as you wear the pair of black gloves with silver cuffs\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Remove epic armours</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>full platemail</name>
							<script>
bodyparts.shoulders.item = N
bodyparts.arms.item = N
bodyparts.legs.item = N
update_status()

[[--
thick rugged platemail:
You remove the thick rugged platemail.
--
midnight black platemail:
You remove the midnight black platemail.
--
deep-blue full plate armour:
You slip out of your deep-blue full plate armour.
--]]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#55007f</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the thick rugged platemail\.$</string>
								<string>^(?:&gt; )?You remove the midnight black platemail\.$</string>
								<string>^(?:&gt; )?You slip out of your deep-blue full plate armour\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>dragonscale</name>
							<script>bodyparts.shoulders.item = N
bodyparts.arms.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the (blue dragonscale|red dragonscale|white dragonscale|green dragonscale|black dragonscale) armour\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>plate armour of Solamnus</name>
							<script>bodyparts.shoulders.item = N
bodyparts.arms.item = N
bodyparts.legs.item = N

update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the plate armour of Solamnus\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>high boots</name>
							<script>bodyparts.legs.item = N
bodyparts.feet.item = N

update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the pair of high boots\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>snake-skin gloves</name>
							<script>bodyparts.hands.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?As you remove the snake-skin gloves, the sense of ease and self-control fades away from you and you feel less secure and focused\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pair of golden gauntlets</name>
							<script>bodyparts.arms.item = N
bodyparts.hands.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You feel the energy in your body fade away as you remove the gauntlets\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pair of knee-high brown boots|dragon-hide boots</name>
							<script>bodyparts.legs.item = N
bodyparts.feet.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the pair of knee-high brown boots\.$</string>
								<string>^(?:&gt; )?You remove the pair of (blue|red|green|black|white) dragon-hide boots\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>clear silver ring</name>
							<script>bodyparts.fingerLeft.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the clear silver ring and your finger slowly begins to feel warm again\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ruby-eyed snake ring</name>
							<script>bodyparts.fingerLeft.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You remove the ruby-eyed snake ring\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pair black gloves with silver cuffs</name>
							<script>bodyparts.hands.item = N
update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:&gt; )?You feel normal again as you remove the pair of black gloves with silver cuffs\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wield epic weapons</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wield SoH</name>
							<script>-- SoH = serrated obsidian halberd
	bodyparts.left.item = "SoH"
	bodyparts.right.item = TWO
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As you close your hands around the shaft of the halberd, you feel the runes growing warm. For a short moment your vision blurs and in red, swirling mist you see silhouette of a man. It changes into the vulture and soon after your vision returns.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wield GBM</name>
							<script>-- GBM = giant black maul
	bodyparts.left.item = "GBM"
	bodyparts.right.item = TWO
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a great deal of effort, you manage to wield the giant black maul two-handed.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wield GBM One hand</name>
							<script>-- GBM = giant black maul
	bodyparts.left.item = N
	bodyparts.right.item = "GBM"
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>With a great deal of effort, you manage to wield the giant black maul right-handed.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>shimmering multi-coloured spear</name>
							<script>
	bodyparts.left.item = "shimmering multi-coloured spear"
	bodyparts.right.item = TWO
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The colours of the shimmering multi-coloured spear seem to pulse and shimmer brightly as you wield it.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>lethal flame-bladed glaive</name>
							<script>	bodyparts.left.item = "lethal flame-bladed glaive"
	bodyparts.right.item = TWO
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You grasp the staff of the lethal flame-bladed glaive in both your hands and spin it skillfully, testing its balance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>long-shafted steel halberd</name>
							<script>
	bodyparts.left.item = "long-shafted steel halberd"
	bodyparts.right.item = TWO
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Mustering your strength, you heft the long-shafted steel halberd into a battle-ready position.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>crystal axe</name>
							<script>-- caxe = crystal axe
	bodyparts.left.item = N
	bodyparts.right.item = "caxe"
	update_status()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You wrap your hand around the soft leather</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wield weapon</name>
						<script>
-- matches[3] will only be either 'left' or 'right', but wielding
-- always refers to hands anyway (not the 'hands' gloves are worn on).

wield_weapon(matches[2], matches[3], matches[4])
update_status()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:&gt; )?You wield the (.+?) in (your|both) (\w+)</string>
							<string>^(?:&gt; )?You hold the (.+?) in (your|both) (\w+)</string>
							<string>^(?:&gt; )?As you close your hands around the shaft of the  (.+?), (your|both) (\w+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stop wielding</name>
						<script>
unwield_weapon(matches[2])
update_status()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:&gt; )?You stop wielding the (.+?).$</string>
							<string>^(?:&gt; )?You unwield the (.+?).$</string>
							<string>^(?:&gt; )?You release the (.+?).$</string>
							<string>^(?:&gt; )?You release your grip around the halberd.$</string>
							<string>^(?:&gt; )?Your (.+?) breaks!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wear item</name>
						<script>
-- TODO Correctly use messages like:
--    &gt; wear ring
--    You wear the ornate sapphire ring on your right ring finger.
--    &gt; wear armour
--    You wear the ornate black suit of studded leather armour.

-- TODO And wearing is even more complicated:
-- We are not always given the affected part.
--    &gt; wear gloves
--    As you wear the snake-skin gloves, a sense of ease and self-
--    control falls over you and you feel very secure and focused.

-- match[6] is the body part,
-- match[5] is the side,
-- match[2] the item worn on it.
-- To find the item, we use (.+?),
-- (\w+) matches only letters but we also want to catch items
-- consisting of several words as in:
--   You wear the green helmet ...

wear_item(matches[2], matches[6], matches[5])
update_status()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:&gt; )?You wear the (.+?) (on|over|around) (both|your) (left|right)? ?(\w+)\.$</string>
							<string>^(?:&gt; )?As you wear the (.+?) (on|over|around) (both|your) (left|right)? ?(\w+), (.*?)$</string>
							<string>^(?:&gt; )?You carefully wear the (.+?) (on|over|around) (both|your) (left|right)? ?(\w+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Remove item</name>
						<script>
remove_worn(matches[2])
update_status()

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:&gt; )?You remove the (.+?).$</string>
							<string>^(?:&gt; )?As you remove the (.+?) from (.*?)$</string>
							<string>^(?:&gt; )?Your (.+?) breaks!$</string>
							<string>^(?:&gt; )?The fur robe breaks!!!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>my prompt triggers</name>
				<script>myhealth, mymaxhealth = tonumber(gmcp.Char.Vitals.hp), tonumber(gmcp.Char.Vitals.maxhp)
echo(string.format("[%d/%dh]", myhealth, mymaxhealth))</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return isPrompt()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Mapper</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>Mapper</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Mapper</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sea room name</name>
					<script>mapper.seaRoomName = ""
mapper.capturingSeaRoom = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>10</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>  } Outside you see the following view:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Room name line</name>
						<script>if mapper.capturingSeaRoom and not matches[2]:find("Outside you see the following view") and not matches[2]:match("There is %w+ obvious exit") then
  mapper.seaRoomName = mapper.seaRoomName .. " " .. matches[2]
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^  } (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stop capturing</name>
						<script>if #matches[2] == 0 or matches[2]:match("There is %w+ obvious exit") then
  mapper.capturingSeaRoom = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sea Exits</name>
					<script>if mapper.seaPromptTimer then
  killTimer(mapper.seaPromptTimer)
end
local exits
if matches[2]:find("and") then
  -- "west, north, south and east" -&gt; "west, north, south, east"
  exits = matches[2]:gsub(" and", ",")
else
  exits = matches[2]
end
mapper.resetCapturedInfo()
mapper.capturedInfo.name = mapper.seaRoomName:trim()
mapper.capturedInfo.exits = exits:split(", ")
mapper.seaRoomName = "BUG"
mapper.seaPromptTimer = tempTimer(0.01, [[mapper.seaPromptReceived()]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#55aa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You may sail: (.+?)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Speedwalking got interrupted</name>
					<script>if mapper.isSpeedWalking() then
  mapper.stopSpeedWalking()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are too tired to move in that direction.</string>
						<string>^There is no obvious exit \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color the exits</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#55aa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^There (?:are|is) \w+ obvious exits?: .+</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Log in</name>
					<script>mapper.mapping = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Please enter your name or type 'new' to create a new character:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ship Lines</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Read shiplines sign</name>
						<script>local line = multimatches[7][2]
if not mapper.config.shipLines[line] then
  mapper.shipLines.addLine(line)
end
mapper.shipLines.setLineExit(line, getRoomHashByID(mapper.currentRoomID), multimatches[6][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>9</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The sign reads:</string>
							<string>^\-+$</string>
							<string>^\| +\|$</string>
							<string>^\| +Genesis ShipLines +\|$</string>
							<string>^\| +\|$</string>
							<string>^\| +(.+?) office +\|$</string>
							<string>^\| +Line ([a-zA-Z -]+?) +\|$</string>
							<string>^\| +Ticket price: \d+cc +\|$</string>
							<string>^\| +\|$</string>
							<string>^\-+$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stages</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Waiting for the sailor</name>
							<script>if mapper.shipLines.travelStage == 1 then
  mapper.shipLines.buyTicket()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The .+? (?:shouts|says|howls|yells):.+?Buy your tickets(?: now)? or stay ashore\!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bought ticket</name>
							<script>if mapper.shipLines.travelStage == 1 then
  mapper.shipLines.nextTravelStage()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You're so small and tiny that I'll let you ride for free. You can board without a ticket.</string>
								<string>You get an? .+?ticket from the .+?\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arrived</name>
							<script>if mapper.shipLines.travelStage == 2 and (mapper.shipLines.getStopCount(mapper.shipLines.currentLine) == 2 or matches[2] == mapper.shipLines.travelDestination) then
  mapper.shipLines.nextTravelStage()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>[a-zA-Z\- ]+ (?:shouts|says|howls|yells): We have arrived at (.+?)\! Disembark\!$</string>
								<string>[a-zA-Z\- ]+ (?:shouts|says|howls|yells): You may go ashore now, travellers! Disembark!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ship_wait_trigger</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>ship_wait_trigger</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wait_ship</name>
					<script>disableTrigger("wait_ship")
cecho ("&lt;red&gt;\nNow no longer auto-boarding ships.\n\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>bt</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Buy your tickets or stay ashore!</string>
						<string>All aboard!</string>
						<string> The fierce roc leaves for Tyr in 60 seconds!</string>
						<string>The fierce roc leaves for Sparkle in 60 seconds!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>sybarus_boat</name>
					<script>disableTrigger("sybarus_boat")
cecho ("&lt;red&gt;\nNow no longer auto-boarding boats.\n\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>board ship</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A wooden boat is thrown on the beach by some great force.</string>
						<string>A wooden boat is jammed up against the float by some great force.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>disembark</name>
					<script>if not mapper.isSpeedWalking() then     --speedwalk with generic handler needs to handle disembark itself
     send("disembark")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You hardly keep your balance as the boat is thrown on the sandy beach.</string>
						<string>You hardly keep your balance as the boat is thrown against the wooden float.</string>
						<string>Disembark!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>MudletMapExplorer-1</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>MudletMapExplorer-1</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>MapExplorer</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>FixColors</name>
						<script>local game = matches[2]
local func = MapExporter.colorFixers[game]
if func then
  func()
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Password correct. Welcome to (\w+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Highlights</name>
			<script>-- Folder for various highlights
-- Add your own!</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Items</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Unusual items</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#aaff00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>((^| )unusual( |$))</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Peculiar items</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#00ffff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>((^| )peculiar( |$))</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Exotic items</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff00ff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>((^| )exotic( |$))</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Epic items</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffd700</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>bloody steel axe</string>
						<string>ancient mithril chainmail</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Health</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>well</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#00fa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>feeling very well</string>
						<string>slightly hurt</string>
						<string>somewhat hurt</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>hurt</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#fafa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>((The )?.+ is hurt)</string>
						<string>You are physically hurt</string>
						<string>feeling rather hurt</string>
						<string>very hurt</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>2</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>in a bad shape</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffaa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>in a very bad shape</string>
						<string>in a bad shape</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>barely alive</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#fa0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>barely alive</string>
						<string>terribly hurt</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>at death's door</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#aa55ff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>at death's door</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Comparing stats</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You much stronger</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You are (much stronger|much more agile|much healthier|much smarter|much wiser|much braver) than .+$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You stronger</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#00fa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You are (stronger|wiser|smarter|healthier|more agile|braver) than the .+$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>About equal</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#fafa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You are (about the same strength|about as agile|about as healthy|about as smart|about as wise|about as brave|) as .+$</string>
						<string>^.+ (about the same strength|about as agile|about as healthy|about as smart|about as wise|about as brave|) as you.+$</string>
						<string>^You are (a bit stronger|a bit better coordinated|a bit healthier|a bit smarter|a bit wiser|a bit braver) than .+$</string>
						<string>^.+ is (a bit stronger|bit better coordinated|a bit healthier|a bit smarter|a bit wiser|a bit braver) than you.+$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stronger than you</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffaa00</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^.+ is (stronger|wiser|smarter|healthier|more agile|braver) than you.+$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Much stronger than you</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#fa0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^.+ is (much stronger|much more agile|much healthier|much smarter|much wiser|much braver) than you.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>emphasise</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffffff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You aren't fighting anyone!</string>
					<string>(in (prime|fine) condition|(touched|(very )?scarred) by battle|a little worn down)</string>
					<string>All messages in your mailbox were read before.</string>
					<string>^Your mailbox contains \d+ messages.$</string>
					<string>able to last a while</string>
					<string>(leaves|flees) (north|east|south|west|northeast|southeast|northwest|southwest|up|down|in|out)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>1</integer>
					<integer>2</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Information</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#00fa00</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Postmaster tells you that you have new mail</string>
					<string>Your black wooden paddle hums for a moment</string>
					<string>We have arrived at .+</string>
					<string>^Your .+ increases from .+ to .+</string>
					<string>^(&lt;Newbie&gt;).+$</string>
					<string>You sense that you have NEW mail.</string>
					<string>(There is (NEW |UNREAD )?mail for you in Sparkle post office.)</string>
					<string>The COMMON board contains a new note since you last logged in!</string>
					<string>Please read the COMMON board for it contains valuable information!</string>
					<string>You feel much better.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>2</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>1</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Warnings</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You feel you're losing your strength.</string>
					<string>^It looks like it is (in a very bad shape|in urgent need of repair).$</string>
					<string>You feel less healthy.</string>
					<string>You have been poisoned!</string>
					<string>You feel more tired.</string>
					<string>You are no longer hidden.</string>
					<string>It's too difficult to hide in here, you're visible again.</string>
					<string>Your legs run away with you!</string>
					<string>forces you to leave</string>
					<string>^.+ is too heavy.</string>
					<string>You are too tired to move in that direction.</string>
					<string>An apparition of Armageddon appears to you.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
					<integer>1</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>0</integer>
					<integer>1</integer>
					<integer>2</integer>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Danger</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#fa0000</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Your .+ breaks!</string>
					<string>It looks like it is going to break any second.</string>
					<string>You feel so much more tired you wish you were dead.</string>
					<string>You feel extremely hurt</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Hitting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffff00</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You strike the .+</string>
					<string>^You bring the knee up into the midsection .+</string>
					<string>^You capitalize on a weakness .+</string>
					<string>^The .+ seem to stand perfectly still .+</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Quest givers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#daa520</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>large cheerful man</string>
					<string>Carlsan</string>
					<string>An ornately dressed enchanter</string>
					<string>Karkadelt</string>
					<string>A nervous little male gnome</string>
					<string>Gnimpsh</string>
					<string>An upset female orc</string>
					<string>Skeezle</string>
					<string>A noble somber elf</string>
					<string>Menerial</string>
					<string>A dwarf king</string>
					<string>A clever broad-shouldered dwarf</string>
					<string>Rommik</string>
					<string>A skillful experienced goblin</string>
					<string>A lanky light-haired librarian</string>
					<string>Nikolon</string>
					<string>A shirriffe</string>
					<string>Tarshir, the Quest master</string>
					<string>A corpulent curled-lipped male proprietor</string>
					<string>Leiden</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Quest objects</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#daa520</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>a wooden cart</string>
					<string>(A|a) dark crystal orb</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Talking people</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#00aaff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>say: (.+?)$</string>
					<string>agrees: (.+?)$</string>
					<string>ahoys: (.+?)$</string>
					<string>announces: (.+?)$</string>
					<string>answers: (.+?)$</string>
					<string>asks: (.+?)$</string>
					<string>blurts: (.+?)$</string>
					<string>booms: (.+?)$</string>
					<string>breathes: (.+?)$</string>
					<string>carols: (.+?)$</string>
					<string>chatters: (.+?)$</string>
					<string>communicates: (.+?)$</string>
					<string>coos: (.+?)$</string>
					<string>explains: (.+?)$</string>
					<string>hints: (.+?)$</string>
					<string>implies: (.+?)$</string>
					<string>indicates: (.+?)$</string>
					<string>inquires: (.+?)$</string>
					<string>maiden: (.+?)$</string>
					<string>mentions: (.+?)$</string>
					<string>mumbles: (.+?)$</string>
					<string>observes: (.+?)$</string>
					<string>ponders: (.+?)$</string>
					<string>pouts: (.+?)$</string>
					<string>queries: (.+?)$</string>
					<string>remarks: (.+?)$</string>
					<string>replies: (.+?)$</string>
					<string>roars: (.+?)$</string>
					<string>says: (.+?)$</string>
					<string>shouts: (.+?)$</string>
					<string>signals: (.+?)$</string>
					<string>sings: (.+?)$</string>
					<string>smiles: (.+?)$</string>
					<string>snaps: (.+?)$</string>
					<string>speaks: (.+?)$</string>
					<string>thinks: (.+?)$</string>
					<string>thunders: (.+?)$</string>
					<string>utters: (.+?)$</string>
					<string>warbles: (.+?)$</string>
					<string>whispers: (.+?)$</string>
					<string>wonders: (.+?)$</string>
					<string>yells: (.+?)$</string>
					<string>snarls: (.+?)$</string>
					<string>snarl: (.+?)$</string>
					<string>howls: (.+?)$</string>
					<string>(tells|asks|gives) you</string>
					<string>in your ear</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Imbuements</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ImbuementTrigger1</name>
					<script>selectCurrentLine()

if line:find("smell of musk") then
  cecho("\n&lt;green&gt; Stat: "..imbTable.musk.enh..". Disenchants into: "..imbTable.musk.stone.."stone.\n")
end
if line:find("smell of vanilla") then
  cecho("\n&lt;green&gt; Stat: "..imbTable.vanilla.enh..". Disenchants into: "..imbTable.vanilla.stone.."stone.\n")
end
if line:find("smell of alcohol") then
  cecho("\n&lt;green&gt; Stat: "..imbTable.alcohol.enh..". Disenchants into: "..imbTable.alcohol.stone.."stone.\n")
end
if line:find("smell of lavender") then
  cecho("\n&lt;green&gt; Stat: "..imbTable.lavender.enh..". Disenchants into: "..imbTable.lavender.stone.."stone.\n")
end
if line:find("smell of sage") then
  cecho("\n&lt;green&gt; Stat: "..imbTable.sage.enh..". Disenchants into: "..imbTable.sage.stone.."stone.\n")
end
if line:find("smell of cinnamon") then
  cecho("\n&lt;green&gt; Stat: "..imbTable.cinnamon.enh..". Disenchants into: "..imbTable.cinnamon.stone.."stone.\n")
end

if line:find("opalesque tint") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.opalesque.enh..". Disenchants into: "..imbTable.opalesque.stone.."stone.\n")
end
if line:find("grey tint") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.grey.enh..". Disenchants into: "..imbTable.grey.stone.."stone.\n")
end
if line:find("brown tint") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.brown.enh..". Disenchants into: "..imbTable.brown.stone.."stone.\n")
end
if line:find("blue tint") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.blue.enh..". Disenchants into: "..imbTable.blue.stone.."stone.\n")
end
if line:find("azure tint") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.azure.enh..". Disenchants into: "..imbTable.azure.stone.."stone.\n")
end
if line:find("rose tint") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.rose.enh..". Disenchants into: "..imbTable.rose.stone.."stone.\n")
end

if line:find("aura of a stallion") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.stallion.enh..". Disenchants into: "..imbTable.stallion.stone.."stone.\n")
end
if line:find("aura of a lion") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.lion.enh..". Disenchants into: "..imbTable.lion.stone.."stone.\n")
end
if line:find("aura of a spider") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.spider.enh..". Disenchants into: "..imbTable.spider.stone.."stone.\n")
end
if line:find("aura of a boar") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.boar.enh..". Disenchants into: "..imbTable.boar.stone.."stone.\n")
end
if line:find("aura of a badger") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.badger.enh..". Disenchants into: "..imbTable.badger.stone.."stone.\n")
end
if line:find("aura of a monkey") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.monkey.enh..". Disenchants into: "..imbTable.monkey.stone.."stone.\n")
end

if line:find("Beryl formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.beryl.enh..". Disenchants into: "..imbTable.beryl.stone.."stone.\n")
end
if line:find("Bone formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.bone.enh..". Disenchants into: "..imbTable.bone.stone.."stone.\n")
end
if line:find("Diamond formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.diamond.enh..". Disenchants into: "..imbTable.diamond.stone.."stone.\n")
end
if line:find("Granite formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.granite.enh..". Disenchants into: "..imbTable.granite.stone.."stone.\n")
end
if line:find("Ivory formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.ivory.enh..". Disenchants into: "..imbTable.ivory.stone.."stone.\n")
end
if line:find("Mithril formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.mithril.enh..". Disenchants into: "..imbTable.mithril.stone.."stone.\n")
end
if line:find("Onyx formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.onyx.enh..". Disenchants into: "..imbTable.onyx.stone.."stone.\n")
end
if line:find("Peridot formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.peridot.enh..". Disenchants into: "..imbTable.peridot.stone.."stone.\n")
end
if line:find("Quartz formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.quartz.enh..". Disenchants into: "..imbTable.quartz.stone.."stone.\n")
end
if line:find("Sapphire formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.sapphire.enh..". Disenchants into: "..imbTable.sapphire.stone.."stone.\n")
end
if line:find("Topaz formations along") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.topaz.enh..". Disenchants into: "..imbTable.topaz.stone.."stone.\n")
end

if line:find("aura of light") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.light.enh..". Disenchants into: "..imbTable.light.stone.."stone.\n")
end
if line:find("aura of darkness") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.darkness.enh..". Disenchants into: "..imbTable.darkness.stone.."stone.\n")
end
if line:find("aura of crimson energy") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.crimson.enh..". Disenchants into: "..imbTable.crimson.stone.."stone.\n")
end
if line:find("aura of well-being") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.wellbeing.enh..". Disenchants into: "..imbTable.wellbeing.stone.."stone.\n")
end
if line:find("aura of viciousness") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.liviciousness.enh..". Disenchants into: "..imbTable.viciousness.stone.."stone.\n")
end
if line:find("aura of malevolence") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.malevolence.enh..". Disenchants into: "..imbTable.malevolence.stone.."stone.\n")
end

if line:find("feeling of unease") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.unease.enh..". Disenchants into: "..imbTable.unease.stone.."stone.\n")
end
if line:find("goosebumps being around") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.goosebumps.enh..". Disenchants into: "..imbTable.goosebumps.stone.."stone.\n")
end
if line:find("urge to sneeze") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.sneeze.enh..". Disenchants into: "..imbTable.sneeze.stone.."stone.\n")
end
if line:find("dull feeling") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.dull.enh..". Disenchants into: "..imbTable.dull.stone.."stone.\n")
end
if line:find("tickle in your throat") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.tickle.enh..". Disenchants into: "..imbTable.tickle.stone.."stone.\n")
end
if line:find("feeling of calm") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.calm.enh..". Disenchants into: "..imbTable.calm.stone.."stone.\n")
end
if line:find("ringing in your ears") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.ringing.enh..". Disenchants into: "..imbTable.ringing.stone.."stone.\n")
end
if line:find("itching sensation") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.itching.enh..". Disenchants into: "..imbTable.itching.stone.."stone.\n")
end
if line:find("hair-raising sensation") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.hairraising.enh..". Disenchants into: "..imbTable.hairraising.stone.."stone.\n")
end
if line:find("feeling of nausea") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.nausea.enh..". Disenchants into: "..imbTable.nausea.stone.."stone.\n")
end
if line:find("feeling of drowsiness") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.drowsiness.enh..". Disenchants into: "..imbTable.drowsiness.stone.."stone.\n")
end
if line:find("silvery aura") then
  cecho("\n&lt;green&gt; Enhancement: +Two Handed Combat. Disenchants into: twinstone.\n")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>smell of musk emanates from its surface</string>
						<string>smell of vanilla emanates from its surface</string>
						<string>smell of alcohol emanates from its surface</string>
						<string>smell of lavender emanates from its surface</string>
						<string>smell of sage emanates from its surface</string>
						<string>smell of cinnamon emanates from its surface</string>
						<string>opalesque tint.</string>
						<string>grey tint.</string>
						<string>brown tint.</string>
						<string>blue tint.</string>
						<string>azure tint.</string>
						<string>rose tint.</string>
						<string>aura of a stallion</string>
						<string>aura of a lion</string>
						<string>aura of a spider</string>
						<string>aura of a boar</string>
						<string>aura of a badger</string>
						<string>aura of a monkey</string>
						<string>Beryl formations along</string>
						<string>Bone formations along</string>
						<string>Diamond formations along</string>
						<string>Ivory formations along</string>
						<string>Mithril formations along</string>
						<string>Onyx formations along</string>
						<string>Peridot formations along</string>
						<string>Quartz formations along</string>
						<string>Sapphire formations along</string>
						<string>Topaz formations along</string>
						<string>aura of light</string>
						<string>aura of darkness</string>
						<string>aura of crimson energy</string>
						<string>aura of well-being</string>
						<string>aura of viciousness</string>
						<string>aura of malevolence</string>
						<string>feeling of unease</string>
						<string>goosebumps being around</string>
						<string>urge to sneeze</string>
						<string>dull feeling</string>
						<string>tickle in your throat</string>
						<string>feeling of calm</string>
						<string>ringing in your ears</string>
						<string>itching sensation</string>
						<string>hair-raising sensation grips you</string>
						<string>feeling of nausea</string>
						<string>feeling of drowsiness</string>
						<string>silvery aura</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ImbuementTrigger2</name>
					<script>selectCurrentLine()

if line:find("clusters of frost cling") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.frost.enh..". Disenchants into: "..imbTable.frost.stone.."stone.\n")
end
if line:find("disturbance in the air") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.disturbance.enh..". Disenchants into: "..imbTable.disturbance.stone.."stone.\n")
end
if line:find("hissing sound") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.hissing.enh..". Disenchants into: "..imbTable.hissing.stone.."stone.\n")
end
if line:find("fluctuation in colour") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.fluctuation.enh..". Disenchants into: "..imbTable.fluctuation.stone.."stone.\n")
end
if line:find("acid sheen") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.acid.enh..". Disenchants into: "..imbTable.acid.stone.."stone.\n")
end
if line:find("green moisture") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.moisture.enh..". Disenchants into: "..imbTable.moisture.stone.."stone.\n")
end
if line:find("odor of decay") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.decay.enh..". Disenchants into: "..imbTable.decay.stone.."stone.\n")
end
if line:find("enveloped by white flames") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.flames.enh..". Disenchants into: "..imbTable.flames.stone.."stone.\n")
end
if line:find("ripples of blue electricity") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.electricity.enh..". Disenchants into: "..imbTable.electricity.stone.."stone.\n")
end

if line:find("feeling of security") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.security.enh..". Disenchants into: "..imbTable.security.stone.."stone.\n")
end
if line:find("sparkle bewitches your senses") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.darkvision.enh..". Disenchants into: "..imbTable.darkvision.stone.."stone.\n")
end
if line:find("orange glow") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.glow.enh..". Disenchants into: "..imbTable.glow.stone.."stone.\n")
end
if line:find("gleam of mithril coat") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.gleam.enh..". Disenchants into: "..imbTable.gleam.stone.."stone.\n")
end
if line:find("whine is coming") then
  cecho("\n&lt;green&gt; Enhancement: "..imbTable.whine.enh..". Disenchants into: "..imbTable.whine.stone.."stone.\n")
end
if line:find("drone issues from") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.drone.enh..". Disenchants into: "..imbTable.drone.stone.."stone.\n")
end
if line:find("clicking sound") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.clicking.enh..". Disenchants into: "..imbTable.clicking.stone.."stone.\n")
end
if line:find("purring sound") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.purring.enh..". Disenchants into: "..imbTable.purring.stone.."stone.\n")
end
if line:find("pulses with a silver aura") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.silvery.enh..". Disenchants into: "..imbTable.silvery.stone.."stone.\n")
end
if line:find("purple gleam playing off") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.purple.enh..". Disenchants into: "..imbTable.purple.stone.."stone.\n")
end
if line:find("swirling bands of yellow energy") then
  cecho("\n&lt;green&gt; Skill: "..imbTable.swirling.enh..". Disenchants into: "..imbTable.swirling.stone.."stone.\n")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>clusters of frost cling</string>
						<string>disturbance in the air surrounding</string>
						<string>hissing sound</string>
						<string>fluctuation in colour</string>
						<string>acid sheen</string>
						<string>green moisture cling</string>
						<string>odor of decay</string>
						<string>enveloped by white flames</string>
						<string>ripples of blue electricity</string>
						<string>feeling of security emanates</string>
						<string>sparkle bewitches your senses</string>
						<string>orange glow</string>
						<string>gleam of mithril seems to coat</string>
						<string>whine is coming</string>
						<string>drone issues from this</string>
						<string>clicking sound</string>
						<string>purring sound</string>
						<string>pulses with a silvery aura</string>
						<string>purple gleam playing</string>
						<string>swirling bands of yellow energy</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>wartrig</name>
					<script>selectCurrentLine()

if line:find("yellow amber") then
    cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Darkvision\n")
end
if line:find("orange garnet") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Enhanced Reflexes\n")
end
if line:find("green peridot") then
    cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Truesight\n")
end
if line:find("blue agate") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Waterbreath\n")
end
if line:find("azure diamond") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Increase Hit+Damage\n")
end
if line:find("blue diamond") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Increase damage\n")
end
if line:find("blue tourmaline") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment:  Water Spells +5\n")
end
if line:find("brown tourmaline") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Earth Spells +5\n")
end
if line:find("red tourmaline") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Fire Spells +5\n")
end
if line:find("violet tourmaline") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Life Spells +5\n")
end
if line:find("white diamond") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Increased Hit\n")
end
if line:find("yellow tourmaline") then
  cecho("\n&lt;green&gt; Slot: Weapon. Enchantment: Air Spells +5\n")
end
if line:find("azure sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Two-Handed Combat +5\n")
end
if line:find("black sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Hide +5\n")
end
if line:find("blue sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Defence +5\n")
end
if line:find("brown agate") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Abjuration +5\n")
end
if line:find("magenta sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Remove Traps +5\n")
end
if line:find("green sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Parry +5\n")
end
if line:find("mauve sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Open Lock +5\n")
end
if line:find("milky quartz") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Illusion +5\n")
end
if line:find("moonstone") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Featherweight\n")
end
if line:find("purple amethyst") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Conjuration +5\n")
end
if line:find("rose quartz") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Transmutation +5\n")
end
if line:find("smoky quartz") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Divination +5\n")
end
if line:find("striped chalcedony") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Enchantment +5\n")
end
if line:find("violet sapphire") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Sneak +5\n")
end
if line:find("bloodstone") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Death Protection\n")
end
if line:find("blue spinel") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Air Protection\n")
end
if line:find("blue topaz") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Water Protection\n")
end
if line:find("carnelian") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Fire Protection\n")
end
if line:find("colourless beryl") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Cold Protection\n")
end
if line:find("golden pyrite") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Earth Protection\n")
end
if line:find("green jade") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Poison Protection\n")
end
if line:find("opal") then
  cecho("\n&lt;green&gt; Slot: Armour. Enchantment: Life Protection\n")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>triangular-shaped</string>
						<string>teardrop-shaped</string>
						<string>ellpise shaped</string>
						<string>oval-shaped</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Misc</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Travelling</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Arriving</name>
					<script>--Auto dismount/disembark
--send ("dismount")
--send ("disembark")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#55aaff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile>C:/Users/krys/AppData/Local/Mudlet/Genesis/Sounds/OceanEnd1.wav</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Now is the time to go out.</string>
						<string>Disembark!</string>
						<string>The wagon stops as you reach your destination.</string>
						<string>The boat bumps up against the float and stops.</string>
						<string>(.*?) bump into something.$</string>
						<string>The boat drifts into the beach and stops.</string>
						<string>You hardly keep your balance as the boat is thrown against the wooden float.</string>
						<string>A wooden boat is jammed up against the float by some great force.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Leaving</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#55aaff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile>C:/Users/krys/AppData/Local/Mudlet/Genesis/Sounds/OarsWater-000.wav</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Last Call from</string>
						<string>A small sturdy wagon rumbles in.</string>
						<string>A wooden boat is thrown on the beach by some great force.</string>
						<string>All board the ship, we are leaving in 20 seconds!</string>
						<string>The boat is pulled away from the beach.</string>
						<string>The boat is pulled away from the float.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>buy ticket</name>
					<script>send("rc get")
send("buy ticket")
send("board")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cannot afford the ticket.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>shipwait</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>shipon</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There is no ship present!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>map off on speedwalk</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>mmap off</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(mapper): Rooms we'll pass through:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>entering trollshaws</name>
					<script>expandalias("ett")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.*)  vanishes into a hidden exit somewhere.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Fighting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You killed - Examine corpse, get imbues, stats</name>
					<script>--Examine corpse to see what items are there
send('examine corpse',false)

--Get imbued ones from corpse and keep them
send("get imbued items from corpse",false)
send("get imbued items",false)
send("keep unworn imbued items",false)
send("keep unwielded imbued items",false)
send("get gems from corpse",false)
send("get gems",false)
send("get coins from corpse",false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You killed (a |an |the )?(.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Auto kill warrior,guard,sentry,militiaman,gatemaster</name>
					<script>--Auto-kill next enemy of the same kind as just killed but only from above list
enemy = matches[3]
send("kill " ..enemy.. "\n")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You killed (.*?) (warrior|sentry|guard|militiaman|gatemaster|tall well-armoured male human|tall thoughtful male human|knight|squire|goblin|orc|zombie|skeleton|warrior|golem|draconian|hobgoblin|kroug|water-kroug|wight|triton|sailor).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fighting</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("brown")
deselect()
resetFormat()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(An |A |The )?(.+) is fighting you.</string>
						<string>^You are in combat with (an |a |the )?(.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You defeated</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
deselect()
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You defeated (.*?)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>assist after kill</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("brown")
deselect()
resetFormat()

-- Assist after 2 second   -- allows for any in game latency
tempTimer(2, [[
send ("assist")
]])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*?) killed (.*?).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mercenaries</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Repeat mattack</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("brown")
deselect()
resetFormat()
send("mattack")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel ready to use Mercenary tactics again!</string>
							<string>(You feel like you can move freely again.|You no longer feel paralyzed.|You regain your senses.|You seem to have recovered your senses.|You stop paralyze.|You regain consciousness.|You manage to break free from the tendril.|You feel you have recovered from the slam attack.|You are no longer held, and can move again.|You regain consciousness and stand on your feet.)</string>
							<string>You feel ready to go on the offensive again.</string>
							<string>You feel ready to gore your foes again!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto mattack</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("orange")
send("mattack")
deselect()
resetFormat()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*?)You (turn to )?attack (a |an |the )?(.+)\.$</string>
							<string>(.*?)(An |A |The )?(.+) attacks you!$</string>
							<string>(.*?)You attack (an |a |the )?(.+)\.$</string>
							<string>(.*?)You assist (.*?)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>gen assistr</name>
					<script>tempTimer(2, [[send("assist")]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.*)attacks</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Autogetting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get coins</name>
					<script>--examine corpse command is set in  "You killed" trigger

--Get only gold and platinum coins
send("get platinum coins from corpse")
send("get gold coins from corpse")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.*?) (gold|platinum) coin(|s) are on the corpse of (.*?).$</string>
						<string>(.*?) (gold|platinum) coin(|s) are on the (.*?) pulp.$</string>
						<string>(.*?) (gold|platinum) coin(|s)(.*?) are on the corpse of (.*?).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Highlights</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Items</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unusual items</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#aaff00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile>C:/Users/krys/AppData/Local/Mudlet/Genesis/Sounds/ScreenUp.wav</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((^| )unusual( |$))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Peculiar items</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00ffff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile>C:/Users/krys/AppData/Local/Mudlet/Genesis/Sounds/ScreenUp.wav</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((^| )peculiar( |$))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Exotic items</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff00ff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile>C:/Users/krys/AppData/Local/Mudlet/Genesis/Sounds/ScreenUp.wav</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((^| )exotic( |$))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Intense items</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff5500</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((^| )intense( |$))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pronounced items</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((^| )pronounced( |$))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Faint items</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((^| )faint( |$))</string>
							<string>((^| )faintly( |$))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You are more experienced</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You feel more experienced!</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("light_yellow")
deselect()
resetFormat()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff7f</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You feel (.*?) experienced(!|.)$</string>
							<string>Suddenly, you feel you have made fantastic progress!</string>
							<string>You suddenly feel more experienced.</string>
							<string>^(.*?)you feel slightly more experienced(.*?)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Titles</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mortal levels</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#e7e773</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>novice</string>
							<string>greenhorne</string>
							<string>beginner</string>
							<string>apprentice</string>
							<string>wanderer</string>
							<string>adventurer</string>
							<string>adept</string>
							<string>great adventurer</string>
							<string>veteran</string>
							<string>expert</string>
							<string>rising hero</string>
							<string>hero</string>
							<string>titan</string>
							<string>champion</string>
							<string>legend</string>
							<string>myth</string>
							<string>heroine</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Health</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>well</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00fa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>feeling very well</string>
							<string>feeling well</string>
							<string>sore</string>
							<string>slightly hurt</string>
							<string>somewhat hurt</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>hurt</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#cbcb00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>((The )?.+ is hurt)</string>
							<string>aching</string>
							<string>physically hurt</string>
							<string>suffering</string>
							<string>very hurt</string>
							<string>bruised and battered</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in a bad shape</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in a bad shape</string>
							<string>in agony</string>
							<string>in a very bad shape</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>barely alive</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>terribly hurt</string>
							<string>barely alive</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>at death's door</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55007f</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>at death's door</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You feel healthier!</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel healthier!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You feel much better</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel much better.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You feel less healthy.</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("black")
deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel less healthy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You are extremely hurt</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("black")
deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ You are extremely hurt (.*?)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You feel healthier as your body regenerates.</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel healthier as your body regenerates.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armour condition</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in prime condition</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in prime condition</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>a little worn down</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#cbcb00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>a little worn down</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in a very bad shape</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in a very bad shape</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in urgent need of repair</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in urgent need of repair</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>going to break any second</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#55007f</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>going to break any second</string>
							<string>likely to break any second</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weapon condition</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in prime condition</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in prime condition</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in a fine condition</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#cbcb00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in a fine condition</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>touched by battle</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>touched by battle</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>scarred by battle</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>scarred by battle</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>very scarred by battle</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>very scarred by battle</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>in big need of a smith</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>in big need of a smith</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>going to break any second</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#55007f</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>going to break any second</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weapon rust</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>find some rust marks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#cbcb00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>find some rust marks</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>spot some rust</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>spot some rust</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>full of rust</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>full of rust</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>bathing in acid</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>bathing in acid</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>falling apart from corrosion</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#fa0000</mFgColor>
						<mBgColor>#55007f</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>falling apart from corrosion</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mercenaries - titles</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#aa007f</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(Mercenaries|(Untalented|Fairly Limited|Somewhat Resourceful|Resourceful|Well-Rounded|Extremely Well-Rounded|Versatile| Versatile|Exceptionally Versatile|Supremely Adaptable|Limitless) (Newcomer|Rookie|Initiate|Hireling|Blade for Hire|Professional|Specialist|Veteran|SavantSoldier of Fortune|Weaponmaster for Hire|Weaponmistress for Hire|Battle Authority|Warlord of Fortune|Warlady of Fortune)( and Free Agent|) (of the Mercenary Guild))</string>
						<string>a mercenary insignia</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Talking</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Armageddon</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("grey")
deselect()
resetFormat()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>An apparition of Armageddon appears to you.</string>
						<string>^He tells everyone: (.*?)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Known</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#a2d7ff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile>C:/Users/krys/.config/mudlet/BP-1/Sounds/sticks.wav</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A cold voice thunders (.*?)$</string>
						<string>^(\w+) (says|whispers|shouts|tells|mumbles|thunders|chatters|booms|snarls|murmurs|sings|hisses|howls|speaks|breathes|exclaims|rasps|lilts|chirps|squeals|wonders|chants|signals|blurts|cries|points at|thunders|bubbles|barks|gobbles|asks you)(:|)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Messengers</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("steel_blue")
deselect()
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(.*?)Postmaster tells you that you have new mail from (.*?).$</string>
						<string>^A red-winged harrekki descends from above, sinks its talons into your arm, and gives you a message from (.*?)$</string>
						<string>^The brown-striped chipmunk scampers up to you with a message from (.*?)$</string>
						<string>^(.*?) eagle descends from the sky, lands on your shoulder and gives you a message from (.*?)$</string>
						<string>^(.*?) faerie flutters down from above and lands on your shoulder, handing you a rolled up scroll.$</string>
						<string>^(.*?) nymph dragon mysteriously appears, lands on your shoulder tickling your neck with her tail and you retrieve a scroll from her.$</string>
						<string>^The water around your ear vibrates carrying the voice of (.*?)$</string>
						<string>^(.*?) page arrives jogging and hands you a message from (.*?).$</string>
						<string>A small albatross lands on your shoulder.</string>
						<string>^An apparition of (.*?) appears (.*?)$</string>
						<string>^As the bubble pops you hear the voice of (.*?)</string>
						<string>^(.*?) ferret crawls up your leg.$</string>
						<string>^(.*?) monkey climbs up on your shoulder.$</string>
						<string>^(.*?) urchin grabs onto your leg and won't let go.$</string>
						<string>^(.*?) hands you a letter and says: I have a letter for you from (.*?)$</string>
						<string>^(.*?) grabs onto your leg and won't let go.$</string>
						<string>^A small black snake slithers out of the shadows and coils itself around your arm. It gives you a scroll from (.*?).$</string>
						<string>^The hovering ghostly skull booms(.*?)$</string>
						<string>A small alert swallow flies up to you and lands on your shoulder with a message.</string>
						<string>A small white cloud descends</string>
						<string>A soft wind blows</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Warnings</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lamp out of oil</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("light_yellow")
bg("black")
deselect()
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The burning (.*?)lamp flickers briefly. It seems to be running out of oil.$</string>
						<string>^The (.*?)lamp goes out.$</string>
						<string>^Your (.*?)lamp flickers briefly. It seems to be running out of oil.$</string>
						<string>^Your (.*?)lamp flickers and goes out. It ran out of oil.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Extremely tired</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("white")
bg("black")
deselect()
resetFormat()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are so tired that every move drains your health.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Drowning - lack of air</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("white")
bg("black")
deselect()
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You suddenly find you cannot breathe, and the water around seem to press on you with a menacing hand!</string>
						<string>You start wondering how long you can keep diving like this.</string>
						<string>You feel a weak pressure from inside.</string>
						<string>You let out some air.</string>
						<string>Some air bubbles flow out your mouth, floating upwards.</string>
						<string>You start longing for solid earth under your feet.</string>
						<string>If only you could fill your lungs with air again!</string>
						<string>You are having problems concentrating on what you are doing.</string>
						<string>All you can think about is air. </string>
						<string>You are holding your breath. Your oxygen debt is very close to fatal!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You have been poisoned!</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("black")
deselect()
resetFormat()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have been poisoned!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You catch someone trying to steal</name>
					<script>
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(?:&gt; )?You catch someone trying to steal (.*?) from you!$</string>
						<string>^(?:&gt; )?You catch (.*?) trying to steal (.*?)$</string>
						<string>^(?:&gt; )?You notice the (.*?) stealing (.*?)$</string>
						<string>attempted to steal your</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You feel paralyzed!</name>
					<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("black")
deselect()
resetFormat()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel paralyzed!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Items breaks</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Items breaks</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("black")
deselect()
resetFormat()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*?) breaks into several pieces and seems useless.$</string>
							<string>^The (.*?) breaks!!!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Items get damaged</name>
						<script>-- Highlight in one go:
selectCurrentLine()
fg("red")
bg("black")
deselect()
resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Yikes! (.*?) more damaged than before.$</string>
							<string>^(.*?) looks a bit more damaged than before.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>herbing</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>herb search</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>search here for herbs</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You find a</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Herb info</name>
					<script>
-- TODO Adding info to irregularly given names
-- needs more work. The names may need to be adjusted
-- to the messages and ... or ...
-- Note: A 'red berry' is neither a 'frosty' nor a 'little' 'red berry',
-- and the other way round.

-- TODO Use the hints as keys for a hash table look-up?
-- Should be faster than ==. But keep == and string.find(),
-- herb related messages are quite irregular.
-- Or trigger only on finding and appraising a herb
-- ('find' and 'study') ...

-- TODO 'appraise'-ing a herb can pull this trigger twice.
-- (There are things worse and more urgent, though.)

HERBS = HERBS or {
   { hint = 'river weed',
     name = 'Adillyp weed',
     effect = 'restores health' },
   { hint = 'golden flower',
     name = 'Alfirin',
     effect = 'cures snake poison' },
   { hint = 'snow-white mushroom',
     name = 'Amanita',
     effect = 'poisonous to health' },
   { hint = 'pale white mushroom',
     name = 'Angeltear',
     effect = 'restores mana' },
   { hint = 'green leaf',
     name = 'Angurth',
     effect = 'poisonous (health, mana, fatigue)' },
   { hint = 'small gold translucent fruit',
     name = 'Annalda',
     effect = 'restores health' },
   { hint = 'dark spotted root',
     name = 'Argil',
     effect = 'restores fatigue' },
   { hint = 'strip of grey bark',
     name = 'Aromatic cedar',
     effect = 'tiring' },
   { hint = 'upright green stalk',
     name = 'Asparagus',
     effect = 'restores health and mana' },
   { hint = 'broad-headed mushroom',
     name = 'Astaldo',
     effect = 'increases discipline' },
   { hint = 'green leaf',
     name = 'Athelas',
     effect = 'no effect' },
   { hint = 'gnarled dark-green vine',
     name = 'Athly',
     effect = 'restores mana' },
   { hint = 'little blue berry',
     name = 'Attanar',
     effect = 'restores health' },
   { hint = 'handful of small dark green leaves',
     name = 'Basil',
     effect = 'restores fatigue' },
   { hint = 'purplish fruit',
     name = 'Beach plum',
     effect = 'restores fatigue' },
   { hint = 'grey gnarled bark',
     name = 'Beach willow',
     effect = 'restores mana and increases intelligence' },
   { hint = 'elongated slender leaf',
     name = 'Beaked sedge',
     effect = 'reduces health' },
   { hint = 'red berry',
     name = 'Beatha',
     effect = 'lethal to undead (health, fatigue, mana)' },
   { hint = 'black velvety flower',
     name = 'Belladonna',
     effect = 'poisonous to health' },
   { hint = 'small pear-shaped fruit',
     name = 'Bergamot',
     effect = 'restores health' },
   { hint = 'small black berry',
     name = 'Bilberry',
     effect = 'bestows nightvision' },
   { hint = 'tiny black bean',
     name = 'Black bean',
     effect = 'restores fatigue' },
   { hint = 'green-topped black carrot',
     name = 'Black carrot',
     effect = 'poisonous to intelligence' },
   { hint = 'black shiny berry',
     name = 'Black currant',
     effect = 'restores fatigue' },
   { hint = 'little black potato',
     name = 'Black potato',
     effect = 'poisonous to health' },
   { hint = 'little blackberry',
     name = 'Black rasp',
     effect = 'restores health' },
   { hint = 'little black berry',
     name = 'Blackberry',
     effect = 'restores fatigue' },
   { hint = 'black fiberous root',
     name = 'Blackroot',
     effect = 'restores health' },
   { hint = 'soft translucent mushroom',
     name = 'Blade',
     effect = 'improves tracking' },
   { hint = 'patch of crimson lichen',
     name = 'Blood creep',
     effect = 'restores health' },
   { hint = 'bright-red sticky weed',
     name = 'Bloodweed',
     effect = 'poisonous' },
   { hint = 'large blue flower',
     name = 'Blue gentian',
     effect = 'increase health' },
   { hint = 'little blue berry',
     name = 'Blueberry',
     effect = 'restores fatigue' },
   { hint = 'purple-green shaggy moss',
     name = 'Blung',
     effect = 'restores fatigue' },
   { hint = 'thick brown root',
     name = 'Breadroot',
     effect = 'restores fatigue' },
   { hint = 'small light brown bean',
     name = 'Broad bean',
     effect = 'restores health' },
   { hint = 'green floweret',
     name = 'Broccoli',
     effect = 'restores mana' },
   { hint = 'slimy brown alga',
     name = 'Brown slime',
     effect = 'restores health' },
   { hint = 'sinuous green-brown alga',
     name = 'Bull kelp',
     effect = 'restores fatigue' },
   { hint = 'veined oval leaf',
     name = 'Bunchberry',
     effect = 'restores fatigue' },
   { hint = 'ribbon-like linear leaf',
     name = 'Bur reed',
     effect = 'no effect' },
   { hint = 'delicate yellow flower',
     name = 'Calendula',
     effect = 'restores health' },
   { hint = 'handful of small brown aromatic seeds',
     name = 'Caraway',
     effect = 'restores fatigue' },
   { hint = 'thin trailing vine',
     name = 'Carlith',
     effect = 'restores health' },
   { hint = 'handful of aromatic pale purple flowers',
     name = 'Catnip',
     effect = 'no effect' },
   { hint = 'thick brown root',
     name = 'Cattail',
     effect = 'no effect' },
   { hint = 'wide black mushroom',
     name = 'Chartess',
     effect = 'restores fatigue' },
   { hint = 'puffy yellow mushroom',
     name = 'Chantrelle',
     effect = 'restores mana' },
   { hint = 'handful of small fine leaves',
     name = 'Chervil',
     effect = 'restores fatigue' },
   { hint = 'sharp short leaf',
     name = 'chicory',
     effect = 'restores fatigue' },
   { hint = 'bunch of slender green leaves',
     name = 'Chives',
     effect = 'restores health' },
   { hint = 'black shiny berry',
     name = 'Chokecherry',
     effect = 'restores fatigue' },
   { hint = 'silvery weed',
     name = 'Cinquefoil',
     effect = 'restores health' },
   { hint = 'coral-like grey lichen',
     name = 'Cladina',
     effect = 'increases constitution' },
   { hint = 'small greenish flower bud',
     name = 'Clove',
     effect = 'restores fatigue' },
   { hint = 'red mushroom',
     name = 'Coccinea',
     effect = 'no effect' },
   { hint = 'brown bean',
     name = 'Coffee bean',
     effect = 'restores fatigue' },
   { hint = 'emerald green leaf',
     name = 'Columbine',
     effect = 'reduces health' },
   { hint = 'woody twining vine',
     name = 'Common hop',
     effect = 'reduces mana' },
   { hint = 'girtty segmented alga',
     name = 'Coralline alg',
     effect = 'reduces health' },
   { hint = 'tall yellowish leaf',
     name = 'Cord grass',
     effect = 'poisonous (fatigue, mana)' },
   { hint = 'red berry',
     name = 'Cranberry',
     effect = 'no effect' },
   { hint = 'pale purplish flower',
     name = 'Crocus',
     effect = 'poisonous to health' },
   { hint = 'broad white leaf',
     name = 'Culkas',
     effect = 'no effect' },
   { hint = 'silvery leaf',
     name = 'Curugwath',
     effect = 'increases sneak/hide' },
   { hint = 'large scaly bulb',
     name = 'Daffodil',
     effect = 'poisonous to health' },
   { hint = 'tiny black mushroom',
     name = 'Dajla',
     effect = 'poisonous (health)' },
   { hint = 'serrated leaf',
     name = 'Dandelion',
     effect = 'no effect' },
   { hint = 'black feathery leaf',
     name = 'Darfern',
     effect = 'no effect' },
   { hint = 'pitch black root',
     name = 'Darkroot',
     effect = 'causes darkness if fresh' },
   { hint = 'handful of feathery leaves',
     name = 'Dill',
     effect = 'no effect' },
   { hint = 'tiny black root',
     name = 'Drakeroot',
     effect = 'increase mana' },
   { hint = 'slimy black mushroom',
     name = 'Drudgeworth',
     effect = 'slows attacks in combat' },
   { hint = 'linear green leaf',
     name = 'Eel grass',
     effect = 'improves swimming' },
   { hint = 'delicate pale blue flower',
     name = 'Eldiross',
     effect = 'no effect' },
   { hint = 'sinuous green-brown alga',
     name = 'Elkhorn kelp',
     effect = 'restores fatigue' },
   { hint = 'green sea fern',
     name = 'Emmelti',
     effect = 'restores health' },
   { hint = 'green straw',
     name = 'Evendim grass',
     effect = 'increases dextrity' },
   { hint = 'handful of fine threadlike leaves',
     name = 'Fennel',
     effect = 'restores fatigue' },
   { hint = 'unfurling green frond',
     name = 'Fiddlehead',
     effect = 'restores health and mana' },
   { hint = 'showy purple flower',
     name = 'Fireweed',
     effect = 'bestows fire resistance' },
   { hint = 'red yellow-spotted root',
     name = 'Flameroot',
     effect = 'bestows fire resistance' },
   { hint = 'handful of tiny grey mushrooms',
     name = 'Fordinfa',
     effect = 'restores mana' },
   { hint = 'handful of purple flowers',
     name = 'Foxglove',
     effect = 'poisonous (health, mana, fatigue)' },
   { hint = 'gray fuzzy leaf',
     name = 'Frostheal',
     effect = 'bestows cold resistance' },
   { hint = 'air-filled warty alga',
     name = 'Fucus',
     effect = 'restores fatigue' },
   { hint = 'red black-spotted mushroom',
     name = 'Fungari',
     effect = 'cures poison' },
   { hint = 'brown tree mushroom',
     name = 'Fungiarbo',
     effect = 'reduces health' },
   { hint = 'smelly white rose-tinged bulb',
     name = 'Garlic',
     effect = 'restores health' },
   { hint = 'tuberous rootstock',
     name = 'Ginger',
     effect = 'restores fatigue' },
   { hint = 'forked root',
     name = 'Ginseng',
     effect = 'restores mana' },
   { hint = 'small wrinkled root',
     name = 'Glimmer root',
     effect = 'no effect' },
   { hint = 'glowing yellow mushroom',
     name = 'Glowshroom',
     effect = 'induces light' },
   { hint = 'pale whitish-blue flower',
     name = 'Goats rue',
     effect = 'cures poison' },
   { hint = 'litle green bean',
     name = 'Green bean',
     effect = 'no effect' },
   { hint = 'little green onion',
     name = 'Green onion',
     effect = 'restores fatigue' },
   { hint = 'resinous amber sap',
     name = 'Green pine',
     effect = 'no effect' },
   { hint = 'slimy green alga',
     name = 'Green slime',
     effect = 'reduces health and fatigue' },
   { hint = 'grey bark',
     name = 'Grey willow',
     effect = 'restores health' },
   { hint = 'small green-yellow mushroom',
     name = 'Handasse',
     effect = 'increases intelligence' },
   { hint = 'red berry',
     name = 'Hawthorn',
     effect = 'restores fatigue' },
   { hint = 'hard enbracted nut',
     name = 'Hazelnut',
     effect = 'restores fatigue' },
   { hint = 'stinking buttercup',
     name = 'Hellebore wort',
     effect = 'poisonous (health, fatigue)' },
   { hint = 'handful of green berries',
     name = 'Hemlock',
     effect = 'lethal poison' },
   { hint = 'pale yellow flower',
     name = 'Hensbane',
     effect = 'cures poison' },
   { hint = 'little red berry',
     name = 'Holly berry',
     effect = 'restores fatigue' },
   { hint = 'gritty slender stock',
     name = 'Horsetail',
     effect = 'reduces health' },
   { hint = 'green berry',
     name = 'Huckleberry',
     effect = 'restores health' },
   { hint = 'handful of white star-shaped flowers',
     name = 'Ithilgil',
     effect = 'reduces panic' },
   { hint = 'green leaf',
     name = 'Jewelweed',
     effect = 'cures Poison Ivy poisoning' },
   { hint = 'twisted brown root',
     name = 'Khuz',
     effect = 'increases discipline' },
   { hint = 'little red bean',
     name = 'Kidney bean',
     effect = 'no effect' },
   { hint = 'bright yellow leaf',
     name = 'Kuko',
     effect = 'increases awareness' },
   { hint = 'fuzzy rusty leaf',
     name = 'Labrador tea',
     effect = 'poisonous (health, fatigue)' },
   { hint = 'enchanting shoe-shaped flower',
     name = 'Lady\'s slip',
     effect = 'poisonous to health' },
   { hint = 'long rough leaf',
     name = 'Lamia',
     effect = 'restores health' },
   { hint = 'slimy green alga',
     name = 'Laminaria',
     effect = 'no effect' },
   { hint = 'small green wrinkled berry',
     name = 'Laranthas',
     effect = 'reduces fatigue' },
   { hint = 'stiff dark green leaf',
     name = 'Laurel',
     effect = 'restores fatigue' },
   { hint = 'small purple berry',
     name = 'Lianor berry',
     effect = 'restores health' },
   { hint = 'strong-smelling gnarled root',
     name = 'Licorice',
     effect = 'restores fatigue' },
   { hint = 'bunch of purple aromatic flowers',
     name = 'Lilac',
     effect = 'restores fatigue' },
   { hint = 'light green bean',
     name = 'Lima bean',
     effect = 'restores fatigue' },
   { hint = 'sweet-smelling golden flower',
     name = 'Lissuin',
     effect = 'restores fatigue' },
   { hint = 'large green-topped orange carrot',
     name = 'Large carrot',
     effect = 'restores fatigue' },
   { hint = 'purple hoary flower',
     name = 'Locoweed',
     effect = 'poisonous (mana)' },
   { hint = 'orange berry',
     name = 'Lore',
     effect = 'increases intelligence' },
   { hint = 'red heart-shaped flower',
     name = 'Lothore',
     effect = 'no effect' },
   { hint = 'small red flower',
     name = 'Loyol',
     effect = 'poisonous (health, fatigue)' },
   { hint = 'purple frond',
     name = 'Lukilvor',
     effect = 'restores mana' },
   { hint = 'gray fuzzy leaf',
     name = 'Madwort',
     effect = 'poisonous (health, fatigue, mana)' },
   { hint = 'twisted gnarly root',
     name = 'Mandrake',
     effect = 'increases death spell' },
   { hint = 'bright yellow flower',
     name = 'Marigold',
     effect = 'cures rashes and bug bites' },
   { hint = 'broad flowery umbel',
     name = 'Marjoram',
     effect = 'restores fatigue' },
   { hint = 'yellow drooping flower',
     name = 'Maroea',
     effect = 'no effect' },
   { hint = 'pale thick root',
     name = 'Marshmallow',
     effect = 'restores health' },
   { hint = 'large purple berry',
     name = 'Mindleech',
     effect = 'reduces mana' },
   { hint = 'handful of narrow shp tooth leaves',
     name = 'Mint',
     effect = 'restores fatigue' },
   { hint = 'slender lumious vine',
     name = 'Mittikna',
     effect = 'induces light' },
   { hint = 'lilac bulb',
     name = 'Moly',
     effect = 'magic resistance' },
   { hint = 'small tuberous root',
     name = 'Monkshood',
     effect = 'restores health' },
   { hint = 'blue mushroom',
     name = 'Moosho',
     effect = 'restores mana' },
   { hint = 'spongelike fungus',
     name = 'Morel',
     effect = 'restores mana' },
   { hint = 'pale white flower',
     name = 'Morgurth',
     effect = 'poisonous' },
   { hint = 'velvety purple flower',
     name = 'Morning glory',
     effect = 'poisonous (mana, fatigue)' },
   { hint = 'translucent red berry',
     name = 'Myrtleberry',
     effect = 'poisonous to health' },
   { hint = 'ghostly black flower',
     name = 'Narcissus',
     effect = 'poisonous to health' },
   { hint = 'round veined leaf',
     name = 'Nasturtium',
     effect = 'restores health' },
   { hint = 'slimy red alga',
     name = 'Nethra',
     effect = 'enables to breathe under water' },
   { hint = 'handful of fuzzy dark-green leaves',
     name = 'Nettle',
     effect = 'contact poison' },
   { hint = 'black green-spotted mushroom',
     name = 'Nightshade',
     effect = 'lethal poison' },
   { hint = 'brown seaweed',
     name = 'Nilgu',
     effect = 'restores health' },
   { hint = 'handful of white and pale green slender-stalked flowers',
     name = 'Niphredil',
     effect = 'restores mana' },
   { hint = 'purple mushroom',
     name = 'Numbis',
     effect = 'poison resistance' },
   { hint = 'piece of brown lichen',
     name = 'Oakmoss',
     effect = 'restores mana' },
   { hint = 'simple delicate fern',
     name = 'Onoclea',
     effect = 'reduces panic and restores fatigue' },
   { hint = 'green-topped orange carrot',
     name = 'Carrot',
     effect = 'restores fatigue' },
   { hint = 'handful of stalked ovate leaves',
     name = 'Oregano',
     effect = 'restores fatigue' },
   { hint = 'red berry',
     name = 'Oreste',
     effect = 'increase strength' },
   { hint = 'yellow fruit',
     name = 'Paramol',
     effect = 'restores fatigue' },
   { hint = 'green leaf',
     name = 'Parsley',
     effect = 'restores health' },
   { hint = 'green rose',
     name = 'Pawnrose',
     effect = 'reduces health' },
   { hint = 'handful of thin-shelled nuts',
     name = 'Peanuts',
     effect = 'restores fatigue' },
   { hint = 'red flower',
     name = 'Pendick flower',
     effect = 'no effect' },
   { hint = 'handful of small red fruits',
     name = 'Pepper',
     effect = 'poisonous (health, fatigue)' },
   { hint = 'handful of grey moss',
     name = 'Pindan',
     effect = 'improves location sense' },
   { hint = 'oily drooping leaf',
     name = 'Poison Ivy',
     effect = 'contact poison' },
   { hint = 'brown grass',
     name = 'Pot',
     effect = 'spoils genitals' },
   { hint = 'small orange pumpkin',
     name = 'Pumpkin',
     effect = 'no effect' },
   { hint = 'red berry',
     name = 'Ramira',
     effect = 'no effect' },
   { hint = 'frosty red berry',
     name = 'frosty raspberry',
     effect = 'restores fatigue' },
   { hint = 'red seven-pointed leaf',
     name = 'Red maple leaf',
     effect = 'no effect' },
   { hint = 'little red potato',
     name = 'Red potato',
     effect = 'restores fatigue' },
   { hint = 'little red berry',
     name = 'Raspberry',
     effect = 'restores fatigue' },
   { hint = 'white red-eyed bean',
     name = 'Redeye',
     effect = 'restores health' },
   { hint = 'red weed',
     name = 'Redweed',
     effect = 'no effect' },
   { hint = 'red leaf',
     name = 'Redwood leaf',
     effect = 'restores health' },
   { hint = 'long tangled vine',
     name = 'Ronwath',
     effect = 'no effect' },
   { hint = 'handful of small pale blue flowers',
     name = 'Rosemary',
     effect = 'restores fatigue' },
   { hint = 'bunch of leaves',
     name = 'Rushwash',
     effect = 'restores fatigue' },
   { hint = 'cup-shaped flower',
     name = 'Saffron',
     effect = 'restores fatigue' },
   { hint = 'handful of tub two-lipped flowers',
     name = 'Sage',
     effect = 'restores fatigue' },
   { hint = 'succulent rotund leaf',
     name = 'Salt wort',
     effect = 'reduces mana' },
   { hint = 'delicate red-brown alga',
     name = 'Sargassum',
     effect = 'restores mana' },
   { hint = 'licorice-scented pliable root',
     name = 'Sarsaparilla',
     effect = 'no effect' },
   { hint = 'little blue berry',
     name = 'Saskatoon',
     effect = 'restores fatigue and health' },
   { hint = 'green trefoil',
     name = 'Satilia',
     effect = 'no effect' },
   { hint = 'handful of small stiff aromatic leaves',
     name = 'Savory',
     effect = 'no effect' },
   { hint = 'globular yellow alga',
     name = 'Sea bubble',
     effect = 'restores health' },
   { hint = 'slippery brown vine',
     name = 'Sea kelp',
     effect = 'restores fatigue' },
   { hint = 'sheet-like green alga',
     name = 'Sea lettuce',
     effect = 'restores fatigue' },
   { hint = 'slippery brown moss',
     name = 'Sea moss',
     effect = 'restores health' },
   { hint = 'scratchy green leaf',
     name = 'Seaside grass',
     effect = 'restores fatigue' },
   { hint = 'blue flower',
     name = 'Sebre',
     effect = 'restores mana' },
   { hint = 'bunch of small hardy blood-red flowers',
     name = 'Seregon',
     effect = 'magic resistance' },
   { hint = 'shadowy green onion',
     name = 'Shadow onion',
     effect = 'restores fatigue' },
   { hint = 'trifoil leaf',
     name = 'Shamrock',
     effect = 'increase discipline' },
   { hint = 'gleaming silvery berry',
     name = 'Silverberry',
     effect = 'restores health' },
   { hint = 'dried small white flower',
     name = 'Simbelmyne',
     effect = 'restores mana' },
   { hint = 'rotting black mushroom',
     name = 'Skullcap',
     effect = 'poisonous' },
   { hint = 'handful of small purple berries',
     name = 'Skunk berries',
     effect = 'restores health' },
   { hint = 'linear keeled leaf',
     name = 'Smooth camas',
     effect = 'poisonous (health, mana, fatigue)' },
   { hint = 'stiff narrow leaf',
     name = 'Soapweed',
     effect = 'bestows acid resistance' },
   { hint = 'dusty white leaf',
     name = 'Solinaith',
     effect = 'resist dragonfear, healing' },
   { hint = 'yellow-red flower',
     name = 'Sparkweed',
     effect = 'bestows fire resistance' },
   { hint = 'greenish brown moss',
     name = 'Sphagnum',
     effect = 'restores health' },
   { hint = 'dark green leaf',
     name = 'Spinach',
     effect = 'increases strength' },
   { hint = 'broad silver leaf',
     name = 'Sterling Leaf',
     effect = 'restores fatigue' },
   { hint = 'gleaming silver berry',
     name = 'Stiltberry',
     effect = 'tiring' },
   { hint = 'handful of thin grey weeds',
     name = 'Strangleweed',
     effect = 'no effect' },
   { hint = 'large red berry',
     name = 'Strawberry',
     effect = 'restores health' },
   { hint = 'thin reddish root',
     name = 'Streyroot',
     effect = 'mildly poisonous' },
   { hint = 'thin dark-brown straw',
     name = 'Strim',
     effect = 'increases health' },
   { hint = 'red oily vine',
     name = 'Sumac',
     effect = 'contact poison' },
   { hint = 'small red berry',
     name = 'Suranie',
     effect = 'restores mana' },
   { hint = 'slender green leaf',
     name = 'Surf grass',
     effect = 'poisonous (health, fatigue)' },
   { hint = 'twisted thorned vine',
     name = 'Tangleshoot',
     effect = 'no effect' },
   { hint = 'bright yellow flower',
     name = 'Tansy',
     effect = 'poisonous(health, mana, fatigue)' },
   { hint = 'handful of small bitter leaves',
     name = 'Tarragon',
     effect = 'restores fatigue' },
   { hint = 'small trifoliate leaf',
     name = 'Three-leaf clover',
     effect = 'restores health' },
   { hint = 'handful of pungent narrow leaves',
     name = 'Thyme',
     effect = 'restores fatigue' },
   { hint = 'black-speckled orange flower',
     name = 'Tiger lily',
     effect = 'poisonous (mana, fatigue)' },
   { hint = 'white root',
     name = 'Tilhiyin',
     effect = 'restores mana' },
   { hint = 'bright red fruit',
     name = 'Tomato',
     effect = 'restores mana' },
   { hint = 'piece of pale green lichen',
     name = 'Tuo',
     effect = 'increases strength' },
   { hint = 'brown broad-headed mushroom',
     name = 'Tyelka',
     effect = 'increases dexterity' },
   { hint = 'resinous amber sap',
     name = 'Uaine pine',
     effect = 'restores mana and fatigue' },
   { hint = 'brown patch of moss',
     name = 'Ungolestel',
     effect = 'cures spider-poison' },
   { hint = 'petite two-petalled flower',
     name = 'Veronica',
     effect = 'no effect' },
   { hint = 'black red-pitted vine',
     name = 'Vinerot',
     effect = 'tiring' },
   { hint = 'strip of grey bark',
     name = 'White cedar',
     effect = 'tiring' },
   { hint = 'white blossom',
     name = 'White hallow',
     effect = 'restores health' },
   { hint = 'small white berry',
     name = 'Whitehorn',
     effect = 'restores health' },
   { hint = 'bit of strange moss',
     name = 'Wilcol',
     effect = 'poison resistance' },
   { hint = 'prickly green fruit',
     name = 'Wild cucumber',
     effect = 'restores fatigue' },
   { hint = 'smooth purplish fruit',
     name = 'Wild plum',
     effect = 'restores fatigue' },
   { hint = 'little red berry',
     name = 'Wild strawb',
     effect = 'restores health' },
   { hint = 'small yellow flower',
     name = 'Wildfeather',
     effect = 'restores fatigue' },
   { hint = 'fiery violet flower',
     name = 'Wildflower',
     effect = 'no effect' },
   { hint = 'oval-shaped leaf',
     name = 'Wintergreen',
     effect = 'restores health' },
   { hint = 'purple blade of grass',
     name = 'Witch grass',
     effect = 'poisonous (mana, fatigue)' },
   { hint = 'yellowish twisted tuber',
     name = 'Yam',
     effect = 'increase strength' },
   { hint = 'pinkish flower',
     name = 'Yarrow',
     effect = 'restores health' },
   { hint = 'white mushroom',
     name = 'Ylpi',
     effect = 'no effect' },
   { hint = 'grey mushroom',
     name = 'Ylpoe',
     effect = 'restores mana' },
}

local herb = matches[3]
local found = nil

for key, data in pairs(HERBS) do
   if herb == data.hint or herb == data.name then
      found = true
   else
      found = string.find(line, data.name, 1, true)
   end
   if found then
      cecho(string.format('\n   &lt;steel_blue&gt;%s: %s.'
                          ,data.name
                          ,data.effect))
      break
   end
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You find (a |an )([^.]+)</string>
						<string>^You study (the )(.+)( carefully.)</string>
						<string>^This is (a |an )([^.,;]+)</string>
						<string>^This (.*)is called ([^.,;]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>herb search off</name>
					<script>disableTrigger("herb search")
cecho ("\n&lt;red&gt;not auto searching for herbs\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your search reveals nothing special.</string>
						<string>You search everywhere, but find no herbs.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>herbsearch on</name>
					<script>enabletrigger("herb search")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You start to search.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>equipment</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>auto keep</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>keep imbued item</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You get an unusual</string>
						<string>You get a peculiar</string>
						<string>You get an exotic</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Exits</name>
				<script>if (matches[2] ~= "one") then
  nrExits = 2
end

moveCursor(0, getLineCount())
deleteLine()

--some change to add colour to number of exits
if (nrExits&gt;1) then
  decho("\nThere are " .. "&lt;255,255,255:0,0,0&gt;" .. matches[2] .. "&lt;217,217,217:0,0,0&gt;" .. " obvious exits: " .. room_exits)
else
  decho("\nThere is " .. "&lt;255,255,255:0,0,0&gt;" .. matches[2] .. "&lt;217,217,217:0,0,0&gt;" .. " obvious exit: " .. room_exits)
end

</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>There are (\w+) obvious exits: (.+)</string>
					<string>There is (\w+) obvious exit: (.+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>gaganimals</name>
				<script>moveCursor(0,getLineCount())
deleteLine()
echo("\n")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>raises itself up, swaying back and forth.</string>
					<string>makes a repulsive squishing noise.</string>
					<string>curls itself into a ball.</string>
					<string>head around and snorts loudly.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage />
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Mapper</name>
			<script></script>
			<command></command>
			<packageName>Mapper</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mapper</name>
				<script></script>
				<command></command>
				<packageName>area_alias</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Area</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>new area</name>
						<script>mapper.newArea(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap an (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>delete area</name>
						<script>mapper.deleteArea(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap ad (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>list areas</name>
						<script>mapper.listAreas()</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap als$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>rename area</name>
						<script>mapper.renameArea(matches[2] or mapper.currentAreaID, matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap ar (?:(\d+) )?(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>New area using the current room</name>
						<script>mapper.newAreaHere(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap anh (.+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Waypoints</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Add</name>
						<script>mapper.addWaypoint(matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mwp ad?d? (\w+)(?: (\d+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Delete</name>
						<script>mapper.deleteWaypoint(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mwp d(?:elete)? (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List</name>
						<script>mapper.listWaypoints()</script>
						<command></command>
						<packageName></packageName>
						<regex>^mwp li?st?$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Goto</name>
					<script>mapper.goto(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^goto (.+?)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set mapping</name>
					<script>mapper.setMapping(matches[2] == "on")</script>
					<command></command>
					<packageName></packageName>
					<regex>^mmap (on|off)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Stop speedwalking</name>
					<script>mapper.stopSpeedWalking()</script>
					<command></command>
					<packageName></packageName>
					<regex>^mstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room find</name>
					<script>mapper.findRoom(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^rf (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Look up room/area</name>
					<script>if matches[2] == "on" or matches[2] == "off" then return end

mapper.lookup(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^mmap f (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Center at me</name>
					<script>centerview(mapper.currentRoomID)</script>
					<command></command>
					<packageName></packageName>
					<regex>^mme$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Move room</name>
					<script>mapper.moveRoom(mapper.currentRoomID, matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^rmv (n|ne|e|se|s|sw|w|nw|u|d)$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Ship Lines</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Rename stop</name>
						<script>local line = mapper.shipLines.getLineFromHashID(mapper.capturedInfo.hashID)
if not line then
  mapper.prompt("The current room doesn't seem to be associated with a ship line.")
else
  mapper.shipLines.setLineExit(line, mapper.capturedInfo.hashID, matches[2])
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap slre (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set coins container</name>
						<script>mapper.shipLines.setCoinsContainer(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap sl set ccc (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set ticket buying command</name>
						<script>mapper.shipLines.setBuyTicketCommand(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap sl set ticket command (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set boarding command</name>
						<script>mapper.shipLines.setBoardShipCommand(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap sl set boarding command (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add a new shipline</name>
						<script>mapper.shipLines.addLine(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap sl new line (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add a new stop</name>
						<script>local line = matches[2]
local roomID = getRoomHashByID(matches[3] == "here" and mapper.currentRoomID or matches[3])
local stop = matches[4]

mapper.shipLines.setLineExit(line, roomID, stop)</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap sl set stop of (.+?) at (here|\d+) with name (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Display shiplines</name>
						<script>mapper.shipLines.displayAll()</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap sl$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Generic Handler</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Display handlers</name>
						<script>mapper.genericHandler.displayHandlers()</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap gh$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>New handler</name>
						<script>mapper.genericHandler.newHandler(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap gh new (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set from exit</name>
						<script>mapper.genericHandler.setFromID(matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap gh set (\w+) from (here|\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set to exit</name>
						<script>mapper.genericHandler.setToID(matches[2], matches[3])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap gh set (\w+) to (here|\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add trigger</name>
						<script>mapper.genericHandler.addTrigger(matches[2], tonumber(matches[3]), matches[4])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap gh add trigger to (\w+) at stage (\d+) with substring (.+?)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add action</name>
						<script>mapper.genericHandler.addAction(matches[2], tonumber(matches[3]), matches[4])</script>
						<command></command>
						<packageName></packageName>
						<regex>^mmap gh add action to (\w+) at stage (\d+) with command (.+?)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>MudletMapExplorer-1</name>
				<script></script>
				<command></command>
				<packageName>MudletMapExplorer-1</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>MapExplorer</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>explore-map</name>
						<script>MapExporter:export()
MapExporter:openUrl()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^\/explore-map$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>export-map</name>
						<script>MapExporter:export()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^\/export-map$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>link-map</name>
						<script>MapExporter:export()
MapExporter:echoUrl()
</script>
						<command></command>
						<packageName></packageName>
						<regex>^\/link-map</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>basics</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Paths_Sparkle</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>church-bank</name>
					<script>send("options brief on")
speedwalk("s,e,n", false)
send("options brief off")

</script>
					<command></command>
					<packageName></packageName>
					<regex>^church-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-church</name>
					<script>send("options brief on")
speedwalk("s,e,n", true)
send("options brief off")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-church$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>fighting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>target</name>
					<script>--set target
target = matches[2]
cecho("&lt;light_slate_blue&gt;Target is now: &lt;goldenrod&gt;"..target.."\n")

--highlight my current target
if id then killTrigger(id) end
id = tempTrigger(target, function() selectString(target, 1) fg("goldenrod") deselect() resetFormat() end)

--for WList
update_status()
</script>
					<command></command>
					<packageName></packageName>
					<regex>^t (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kill</name>
					<script>send("kill "..target)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^kt$</regex>
				</Alias>
			</AliasGroup>
			<Alias isActive="yes" isFolder="no">
				<name>sell_all</name>
				<script>send("keep imbued items")
send("sell all")</script>
				<command></command>
				<packageName></packageName>
				<regex>^sell all$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>buy_ticket</name>
				<script>send('buy tickets for team')
send('board ship')</script>
				<command></command>
				<packageName></packageName>
				<regex>^buy ticket$</regex>
			</Alias>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>CSSman</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>CSSMan</name>
				<packageName></packageName>
				<script>-- CSSMan by Vadi. Public domain.
--This is what makes GUI work.
CSSMan = {}
CSSMan.__index = CSSMan

function CSSMan.new(stylesheet)
  local obj  = { stylesheet = {} }
  setmetatable(obj,CSSMan)
  local trim = string.trim

  assert(type(stylesheet) == "string", "CSSMan.new: no stylesheet provided. A possible error is that you might have used CSSMan.new, not CSSMan:new")

  for line in stylesheet:gmatch("[^\r\n]+") do
    local attribute, value = line:match("^(.-):(.-);$")
    if attribute and value then
      attribute, value = trim(attribute), trim(value)
      obj.stylesheet[attribute] = value
    end
  end

  return obj
end

function CSSMan:set(key, value)
  self.stylesheet[key] = value
end

function CSSMan:get(key)
  return self.stylesheet[key]
end

function CSSMan:getCSS(key)
  local lines, concat = {}, table.concat
  for k,v in pairs(self.stylesheet) do lines[#lines+1] = concat({k,": ", v, ";"}) end
  return concat(lines, "\n")
end

function CSSMan:gettable()
  return self.stylesheet
end

function CSSMan:settable(tbl)
  assert(type(tbl) == "table", "CSSMan:settable: table expected, got "..type(tbl))

  self.stylesheet = tbl
end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>GUI</name>
			<packageName></packageName>
			<script>GUI = GUI or {}
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Set Borders</name>
				<packageName></packageName>
				<script>--Click on this if it does not size correctly.
local w,h = getMainWindowSize()
setBorderLeft(w/7)
setBorderTop(h/50)
setBorderBottom(h/10)
setBorderRight(w/4)</script>
				<eventHandlerList>
					<string>gmcp.char.login</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Create Background</name>
				<packageName></packageName>
				<script>GUI.BackgroundCSS = CSSMan.new([[
  background-color: rgb(20,20,20);
]])

GUI.Left = Geyser.Label:new({
  name = "GUI.Left",
  x = 0, y = 0,
  width = "13%",
  height = "100%",
})
GUI.Left:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Right = Geyser.Label:new({
  name = "GUI.Right",
  x = "-35%", y = 0,
  width = "35%",
  height = "100%",
})
GUI.Right:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Top = Geyser.Label:new({
  name = "GUI.Top",
  x = "13%", y = 0,
  width = "53%",
  height = "1%",
})
GUI.Top:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Bottom = Geyser.Label:new({
  name = "GUI.Bottom",
  x = "13%", y = "91%",
  width = "53%",
  height = "10%",
})
GUI.Bottom:setStyleSheet(GUI.BackgroundCSS:getCSS())</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Header Icons</name>
				<packageName></packageName>
				<script>--Here is where we make click buttons.
GUI.Header = Geyser.HBox:new({
  name = "GUI.Header",
  x = '1.5%', y = 0,
  width = "95%",
  height = "94%",
},GUI.Bottom)
--Makes sure boxes go in the bottom border.
GUI.IconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: white;
  border-radius: 5px;
  margin: 5px;
  qproperty-wordWrap: true;
]])

for i=1,2 do
  GUI["Icon"..i] = Geyser.Label:new({
    name = "GUI.Icon"..i,
  },GUI.Header)
  GUI["Icon"..i]:setStyleSheet(GUI.IconCSS:getCSS())
--  GUI["Icon"..i]:echo("&lt;center&gt;GUI. Icon"..i)
end
--Makes 2 boxes of equal width in the header container.

GUI["Icon1"]:echo("&lt;center&gt;Loot")
--Makes Icon1 say "Loot"
GUI["Icon2"]:echo("&lt;center&gt;Sell Loot")

--Makes Icon1 call the loot function defined below. 
GUI.Icon1:setClickCallback("loot")
GUI.Icon2:setClickCallback("sellloot")

function loot()
send('get all from corpse')
send('fillpack')
end

function sellloot()
send('get all from pack')
send('keep imbued items')
send('sell all')
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Boxes</name>
				<packageName></packageName>
				<script>GUI.BoxCSS = CSSMan.new([[
  background-color: rgba(0,0,0);
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  border-color: white;
  margin: 10px;
]])
--To make box:
GUI.Box1 = Geyser.Label:new({
  name = "GUI.Box1",
  x = 0, y = 0,
  width = "100%",
  height = "45%",
},GUI.Right)
GUI.Box1:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box1:echo("&lt;center&gt;Magic Map")
--Go to MapArea script to see how to embed it.
GUI.Box2 = Geyser.Label:new({
  name = "GUI.Box2",
  x = "0", y = "45%",
  width = "100%",
  height = "25%",
},GUI.Right)
GUI.Box2:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box2:echo("&lt;center&gt;GUI.Box2")

GUI.Box3 = Geyser.Label:new({
  name = "GUI.Box3",
  x = "0%", y = "70%",
  width = "100%",
  height = "31%",
},GUI.Right)
GUI.Box3:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box3:echo("&lt;center&gt;Chat")

GUI.Box4 = Geyser.Label:new({
  name = "GUI.Box4",
  x = "0%", y = "0%",
  width = "100%",
  height = "52%",
},GUI.Left)
GUI.Box4:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box4:echo("&lt;center&gt;Wearlist")</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>MagicMap</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList>
				<string>gmcp.char.login</string>
			</eventHandlerList>
			<Script isActive="yes" isFolder="no">
				<name>map_area</name>
				<packageName></packageName>
				<script>	-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--lua MagicMap_container:flash()

map_console = nil
function map_area()

testCon2 = testCon2 or Geyser.Container:new({name="magic_map", autoLoad=true, autoSave=false})
	map_label = Geyser.Label:new({
		name = "map_label",
x = '4%', y = '10%',

width = "30%",
height = "80%",
},GUI.Box1)
	
 map_label:setStyleSheet([[
	 background-color: black;
--   border: 1px dashed green;
  ]])

	map_console = Geyser.MiniConsole:new({
		name = "map_console",
x = '4%', y = '6%-2px',
-- x = 963
width = "92%-2px",
height = "90%",
	  color = "black",
	}, GUI.Box1);
-- This puts the map into GUI.Box1.
	setMiniConsoleFontSize("map_console", 6)
	
enableHorizontalScrollBar(map_console)
end
</script>
				<eventHandlerList>
					<string>gmcp.char.login</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>my_map</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function split(str, pat)
   local t = {}  -- NOTE: use {n = 0} in Lua-5.0
   local fpat = "(.-)" .. pat
   local last_end = 1
   local s, e, cap = str:find(fpat, 1)
   while s do
      table.insert(t,cap)
      last_end = e+1
      s, e, cap = str:find(fpat, last_end)
   end
   if last_end &lt;= #str then
      cap = str:sub(last_end)
      table.insert(t, cap)
   end
   return t
end

function replace_char(pos, str, r)
   return str:sub(1, pos-1) .. "&lt;255,0,0:0,0,0&gt;" .. r .. "&lt;255,255,255:0,0,0&gt;" .. str:sub(pos+1)
end

function my_map()
	if gmcp.room.info.x == nil then
		clearWindow("map_console")
		decho("newmap", "&lt;255,255,255:0,0,0&gt;No map info available")
		return
	end
	local x, y = tonumber(gmcp.room.info.x), tonumber(gmcp.room.info.y)
	local map = gmcp.room.map.map
	local maplines = split(map, "\n")
	local myline = replace_char(x+1,maplines[y+1], "X")
	maplines[y+1] = myline
	local newmap = table.concat(maplines, "\n")
	newmap = "&lt;255,255,255:0,0,0&gt;" .. newmap
	clearWindow("map_console")
	decho("map_console",newmap)
end</script>
				<eventHandlerList>
					<string>gmcp.room.info</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>mudlet_map</name>
				<packageName></packageName>
				<script>GUI.Map_Container = Geyser.Container:new({
name = "GUI.Map_Container",
x = 0, y = 0,
width = "100%",
height = "100%",
},GUI.Box2)

GUI.Mapper = Geyser.Mapper:new({
name = "GUI.Mapper",
x = 20, y = 20,
width = GUI.Map_Container:get_width()-40,
height = GUI.Map_Container:get_height()-40,
},GUI.Map_Container)

--the map's default background color is black, so lets blend it in...
GUI.Box1CSS = CSSMan.new(GUI.BoxCSS:getCSS())
GUI.Box1CSS:set("background-color", "black")
GUI.Box1:setStyleSheet(GUI.Box1CSS:getCSS())</script>
				<eventHandlerList>
					<string>gmcp.room.info</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>ChatBox</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>chat_area</name>
				<packageName></packageName>
				<script>function chat_area()
	sendGMCP("Core.Supports.Set [\"Comm 1\", \"Room 1\", \"Char 1\"]")
	
	-- We do not want NPCs talks in the chat box:
	sendGMCP([[Core.Options {"npc_comms" : "off" }]])
	
	chat = Geyser.MiniConsole:new({
	  name="chat",
	  x="15", y="15",
	  width="94%-1px", height="85%",
	  color="black",
	}, GUI.Box3);
	chat:setFontSize(10)
  autoWrap = true
	setWindowWrap("chat", 50)
end</script>
				<eventHandlerList>
					<string>gmcp.char.login</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>get_chat</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
chat_count = 1
function get_chat()
	local message = gmcp.comm.channel.message
	if chat_count % 2 == 0 then
		message = "&lt;51,153,255:0,0,0&gt;" .. message
	else
		message = "&lt;230,230,230:0,0,0&gt;" .. message
	end
	setWindowWrap("chat", 53)
	decho("chat",message .. "\n")
	chat_count = chat_count + 1
end</script>
				<eventHandlerList>
					<string>gmcp.comm.channel</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>WList</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Infoscreen</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList>
					<string>gmcp.char.login</string>
				</eventHandlerList>
				<Script isActive="yes" isFolder="no">
					<name>The Model</name>
					<packageName></packageName>
					<script>----
---- The model.
----
---- Only create variables that don't already exist.
----

---
--- Constants:
---

N = N or "none"
TWO = TWO or '(two-handed)'

---
--- Variables:
---

progress = progress or 'no measurable'
target = target or N
myKills = myKills or N

-- Configuration variables

-- Each bodypart is a key to a table with both the item worn
-- on that part and the current condition of the piece of equipment.
-- We are only interested in bodyparts where you can get hit,
-- so we don't map stuff like the newbie pin worn on your chest.
bodyparts = bodyparts or {
   head = { item = N, condition = N } -- helmets
   ,ear = { item = N, condition = N } -- earring	 
   ,neck = { item = N, condition = N } -- amulet, pendant, necklace, etc.
   ,shoulders = { item = N, condition = N } -- 'chest and back'
   ,arms = { item = N, condition = N } -- bracers
   ,left = { item = N, condition = N } -- Hands: both wielded weapons and ...
   ,right = { item = N, condition = N } -- ... worn shields!
   ,hands = { item = N, condition = N } -- gloves
   ,body = { item = N, condition = N } -- animal pelt, etc.
	 ,waist = { item = N, condition = N } -- belt, sash, briefs, etc.
   ,legs = { item = N, condition = N } -- greaves
   ,feet = { item = N, condition = N } -- shoes and boots
	 ,wristLeft = { item = N, condition = N } -- left wrist
	 ,wristRight = { item = N, condition = N } -- right wrist
	 ,fingerLeft = { item = N, condition = N } -- left finger
	 ,fingerRight = { item = N, condition = N } -- right finger
	 ,shoulderLeft = { item = N, condition = N } -- left shoulder
	 ,shoulderRight = { item = N, condition = N } -- right shoulder	 
} 

---
--- Operations
---

function wield_weapon(w, two, hand)
   if 'both' == two then
      bodyparts.left.item = w
      bodyparts.right.item = TWO
   else
      bodyparts[hand].item = w
   end
end

-- When both hands wield the same (single-handed) weapon:
-- The first thing wielded or worn goes to the right.
-- The first weapon unwielded seems to be removed from the left,
-- even when you had to specify 'wield second ...'.
function unwield_weapon(w)
   if bodyparts.right.item == TWO then
      bodyparts.left.item = N
      bodyparts.right.item = N
   elseif w == bodyparts.left.item then
      bodyparts.left.item = N
   elseif w == bodyparts.right.item then
      bodyparts.right.item = N
   -- else do nothing but hope it doesn't matter.
   end
end

-- Shields are worn on 'left arm' or even 'right arm',
-- when both left and right arm are still free.
-- These are not(!) the 'arms' bracers are worn on.
-- In effect they are rather wielded,
-- preventing the wielding of a weapon in that hand.
-- Note! Not only shields are worn left or right!
-- The bodypart affected can be a 'shoulder', or some finger on either hand.
-- And these do not prevent wielding a weapon or wearing a shield on that side.
function wear_item(item, part, hand)
   if 'arm' == part then
      part = hand -- Only(?) shields are worn on 'arm's.
   end
   bodyparts[part].item = item
end

-- It is important to check 'right' before 'left':
-- an unspecified item is 'first some_item' and ends up on the 'right',
-- if both hands are empty. If we wield a second one of
-- the same kind of item ('second some_item') it goes to the left.
-- If we unwield just 'some_item' it is removed from the 'right',
-- regardless of whether it was wielded with an ordinal attribute.
function remove_worn(i)
   if i == bodyparts.head.item then
      bodyparts.head.item = N
      bodyparts.head.condition = N
   elseif i == bodyparts.ear.item then
      bodyparts.ear.item = N
      bodyparts.ear.condition = N						
   elseif i == bodyparts.neck.item then
      bodyparts.neck.item = N
      bodyparts.neck.condition = N			
   elseif i == bodyparts.shoulders.item then
      bodyparts.shoulders.item = N
      bodyparts.shoulders.condition = N
   elseif i == bodyparts.arms.item then
      bodyparts.arms.item = N
      bodyparts.arms.condition = N
   elseif i == bodyparts.right.item then
      bodyparts.right.item = N
      bodyparts.right.condition = N
   elseif i == bodyparts.left.item then
      bodyparts.left.item = N
      bodyparts.left.condition = N
   elseif i == bodyparts.hands.item then 
      bodyparts.hands.item = N
      bodyparts.hands.condition = N
   elseif i == bodyparts.body.item then
      bodyparts.body.item = N
      bodyparts.body.condition = N
   elseif i == bodyparts.waist.item then
      bodyparts.waist.item = N
      bodyparts.waist.condition = N
   elseif i == bodyparts.legs.item then
      bodyparts.legs.item = N
      bodyparts.legs.condition = N					
   elseif i == bodyparts.feet.item then
      bodyparts.feet.item = N
      bodyparts.feet.condition = N
   elseif i == bodyparts.wristLeft.item then
      bodyparts.wristLeft.item = N
      bodyparts.wristLeft.condition = N
   elseif i == bodyparts.wristRight.item then
      bodyparts.wristRight.item = N
      bodyparts.wristRight.condition = N		
   elseif i == bodyparts.fingerLeft.item then
      bodyparts.fingerLeft.item = N
      bodyparts.fingerLeft.condition = N
   elseif i == bodyparts.fingerRight.item then
      bodyparts.fingerRight.item = N
      bodyparts.fingerRight.condition = N
   elseif i == bodyparts.shoulderLeft.item then
      bodyparts.shoulderLeft.item = N
      bodyparts.shoulderLeft.condition = N
   elseif i == bodyparts.shoulderRight.item then
      bodyparts.shoulderRight.item = N
      bodyparts.shoulderRight.condition = N															
   
	 -- else do nothing but hope it was worn on another part,
   -- like the newbie pin on the chest ...
   end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>The View</name>
					<packageName></packageName>
					<script>local RED_N = "&lt;SlateGrey&gt;None"

---
--- Construct the status view.
---
testCon = testCon or Geyser.Container:new({name="testContainer"})

status_pane = status_pane or Geyser.MiniConsole:new(
   {
      name = "status_pane",
      x = "10%",
      y = "5%",
      width = "80%",
      height = "90%",
   }
   ,GUI.Box4)
status_pane:setColor('black')
enableHorizontalScrollBar('status_pane')
function set_status_font_size(size)
   setMiniConsoleFontSize(status_pane.name, size)
end

  autoWrap = true
set_status_font_size(9)
--set_status_font_size(9)
--1920x1080:		set_status_font_size(9)
--1366x768:			set_status_font_size(8)


---
--- Update status view.
---

local function shorten_desc(s)
   -- Remove 'pair of ', 'set of '.
   return string.gsub(s, '.+.? of ', '', 1)
end

local function make_bar(key, tbl)
   local lvl = tbl[key]
   if not lvl then
      cecho(string.format('&lt;red&gt;make_bar: No key (%s)!', key))
      return string.format('%s?!', key)
   end
   local bar = '|'
   local i = 0
   for n = 1, lvl do
      bar = bar .. '#'
      i = n
   end
   for n = i + 1, tbl._max do
      bar = bar .. '-'
   end
   return (bar .. '|')
end

local function make_status()

   local head = bodyparts.head.item
   local ear = bodyparts.ear.item	 
   local neck = bodyparts.neck.item
   local shoulders = bodyparts.shoulders.item
   local arms = bodyparts.arms.item
   local hands = bodyparts.hands.item
   local body = bodyparts.body.item
	 local waist = bodyparts.waist.item
   local legs = bodyparts.legs.item
   local feet = bodyparts.feet.item
   local right = bodyparts.right.item
   local left = bodyparts.left.item
	 local wristRight = bodyparts.wristRight.item
   local wristLeft = bodyparts.wristLeft.item
	 local fingerRight = bodyparts.fingerRight.item
   local fingerLeft = bodyparts.fingerLeft.item
	 local shoulderRight = bodyparts.shoulderRight.item
   local shoulderLeft = bodyparts.shoulderLeft.item
	 	 
   if head == N then head = RED_N end
	 if ear == N then ear = RED_N end
   if neck == N then neck = RED_N end
   if shoulders == N then shoulders = RED_N end
   if arms == N then arms = RED_N end
   if hands == N then hands = RED_N end
   if body == N then body = RED_N end
	 if waist == N then waist = RED_N end
   if legs == N then legs = RED_N end
   if feet == N then feet = RED_N end
   if right == N then right = RED_N end
   if left == N then left = RED_N end
   if wristRight == N then wristRight = RED_N end
   if wristLeft == N then wristLeft = RED_N end
   if fingerRight == N then fingerRight = RED_N end
   if fingerLeft == N then fingerLeft = RED_N end
   if shoulderRight == N then shoulderRight = RED_N end
   if shoulderLeft == N then shoulderLeft = RED_N end	 
	 	 
   local target = target
   if not target or N == target or '' == target
   then target = '&lt;grey&gt;none'
   else target = string.format('&lt;goldenrod&gt;%s', target)
   end

   local myKills = myKills
   if not myKills or N == myKills or '' == myKills
   then myKills = '&lt;grey&gt; '
   else myKills = string.format('&lt;white&gt;%s', myKills)
   end
	 
--This is what it says in the box.
return string.format([[
&lt;slate_blue&gt;Wielding
&lt;white&gt;Left   : &lt;white&gt;%s
&lt;grey&gt;Right  : %s

&lt;slate_blue&gt;Wearing
&lt;white&gt;Head   : %s
&lt;grey&gt;Ear    : %s
&lt;white&gt;Neck   : %s
&lt;white&gt;Chest  : %s
&lt;grey&gt;Arms   : %s
&lt;white&gt;Body   : %s
&lt;grey&gt;Legs   : %s
&lt;white&gt;Hands  : %s
&lt;grey&gt;ShouldL: %s
&lt;white&gt;ShouldR: %s
&lt;grey&gt;WristL : %s
&lt;white&gt;WristR : %s
&lt;grey&gt;FingerL: %s
&lt;white&gt;FingerR: %s
&lt;grey&gt;Waist  : %s
&lt;white&gt;Feet   : %s

&lt;grey&gt;Target : %s
&lt;grey&gt;Kills  : %s
]]
--Variables diplayed in place of %s:
,left, right
,head
,ear
,neck
,shoulders
,arms
,body
,legs

,hands
,shoulderLeft
,shoulderRight
,wristLeft
,wristRight
,fingerLeft
,fingerRight
,waist
,feet

,target
,myKills
)
end

function update_status(dump)
   if dump then
      cecho(make_status())
   else
      local s = status_pane.name
      clearWindow(s)
      cecho(s, make_status())
   end
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>Set up</name>
				<packageName></packageName>
				<script>update_status()
</script>
				<eventHandlerList>
					<string>gmcp.char.login</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Vitals</name>
			<packageName>Vitals20160213</packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>SetVitals</name>
				<packageName></packageName>
				<script>-- Converting vitals text levels into numbers for bars/gauge

--Health
local healthTable = healthTable or {
["at death's door"] = 1, ["barely alive"] = 2,  ["terribly hurt"] = 3, 
["in a very bad shape"] = 4, ["in agony"] = 5, ["in a bad shape"] = 6, 
["very hurt"] = 7, ["suffering"] = 8, ["hurt"] = 9, ["aching"] = 10, 
["somewhat hurt"] = 11,  ["slightly hurt"] = 12, ["sore"] = 13, 
["feeling well"] = 14, ["feeling very well"] = 15}

function setHealth(health)
  myHealth = health
  healthNumber = healthTable[health]
  if(healthNumber) then
    GUI.Health:setValue(healthNumber,15)
    GUI.Health.front:echo(myHealth)
  end
end

--Mana
local manaTable = manaTable or {
["in a vegetable state"] = 1, ["exhausted"] = 2,  ["worn down"] = 3,
["indisposed"] = 4, ["in a bad shape"] = 5, ["very degraded"] = 6,
["rather degraded"] = 7, ["degraded"] = 8, ["somewhat degraded"] = 9,
["slightly degraded"] = 10, ["in full vigour"] = 11}

function setMana(mana)
  myMana = mana
  manaNumber = manaTable[mana]
  if(manaNumber) then
    GUI.Mana:setValue(manaNumber,11)
    GUI.Mana.front:echo(myMana)
  end
end

--Fatigue
local fatigueTable = fatigueTable or {
["extremely exhausted"] = 1, ["very exhausted"] = 2, ["exhausted"] = 3, ["somewhat exhausted"] = 4, ["slightly exhausted"] = 5,
["extremely tired"] = 6, ["very tired"] = 7, ["tired"] = 8, ["somewhat tired"] = 9, ["slightly tired"] = 10, 
["extremely weary"] = 11, ["very weary"] = 12, ["weary"] = 13, ["somewhat weary"] = 14, ["slightly weary"] = 15, 
["slightly alert"] = 16,  ["somewhat alert"] = 17,  ["alert"] = 18, ["very alert"] = 19,["extremely alert"] = 20}

function setFatigue(fatigue)
  myFatigue = fatigue
  fatigueNumber = fatigueTable[fatigue]
  if(fatigueNumber) then
    GUI.Fatigue:setValue(fatigueNumber,20)
    GUI.Fatigue.front:echo(myFatigue)
  end
end

--Food
local foodTable = foodTable or {
["eat quite a lot more"] = 1, ["eat a lot more"] = 2, ["eat some more"] = 3,
["eat a little more"] = 4, ["barely eat more"] = 5}

function setFood(food)
  myFood = food
  foodNumber = foodTable[food]
  if(foodNumber) then
    GUI.Food:setValue(foodNumber,5)
    GUI.Food.front:echo(myFood)
  end
end

--Drink
local drinkTable = drinkTable or {
["drink quite a lot more"] = 1, ["drink a lot more"] = 2, ["drink some more"] = 3,
["drink a little more"] = 4, ["barely drink more"] = 5}

function setDrink(drink)
  myDrink = drink
  drinkNumber = drinkTable[drink]
  if(drinkNumber) then
    GUI.Drink:setValue(drinkNumber,5)
    GUI.Drink.front:echo(myDrink)
  end
end

--Intox
local intoxTable = intoxTable or {
["sober"] = 0,
["slightly tipsy"] = 1, ["somewhat tipsy"] = 2, ["tipsy"] = 3, ["very tipsy"] = 4, ["extremely tipsy"] = 5,
["slightly intoxicated"] = 6, ["somewhat intoxicated"] = 7, ["intoxicated"] = 8, ["very intoxicated"] = 9, ["extremely intoxicated"] = 10,
["slightly drunk"] = 11, ["somewhat drunk"] = 12, ["drunk"] = 13, ["very drunk"] = 14, ["extremely drunk"] = 15,
["slightly tanked"] = 16, ["somewhat tanked"] = 17, ["tanked"] = 18, ["very tanked"] = 19, ["extremely tanked"] = 20,
["slightly blitzed"] = 21, ["somewhat blitzed"] = 22, ["blitzed"] = 23, ["very blitzed"] = 24, ["extremely blitzed"] = 25,
["slightly wasted"] = 26, ["somewhat wasted"] = 27, ["wasted"] = 28, ["very wasted"] = 29, ["extremely wasted"] = 30,
["slightly toasted"] = 31, ["somewhat toasted"] = 32, ["toasted"] = 33, ["very toasted"] = 34, ["extremely toasted"] = 35,
["slightly pissed"] = 36, ["somewhat pissed"] = 37, ["pissed"] = 38, ["very pissed"] = 39, ["extremely pissed"] = 40,
["slightly stoned"] = 41, ["somewhat stoned"] = 42, ["stoned"] = 43, ["very stoned"] = 44, ["extremely stoned"] = 45,
["slightly obliviated"] = 46, ["somewhat obliviatedd"] = 47, ["obliviated"] = 48, ["very obliviated"] = 49, ["extremely obliviated"] = 50}

function setIntox(intox)
  myIntox = intox
  intoxNumber = intoxTable[intox]
  if(intoxNumber) then
    GUI.Intox:setValue(intoxNumber,50)
    GUI.Intox.front:echo(myIntox)
  end
end
--Progress
local progressTable = progressTable or {
["no measurable"] = 1,
["insignificant"] = 2,["a tiny amount of"] = 3,["minimal"] = 4, 
["slight"] = 5, ["low"] = 6, ["a little"] = 7, ["some"] = 8,
["modest"] = 9, ["decent"] = 10, ["nice"] = 11, ["good"] = 12,
["very good"] = 13, ["major"] = 14, ["great"] = 15, ["extremely good"] = 16, 
["awesome"] = 17, ["immense"] = 18, ["tremendous"] = 19, ["fantastic"] = 20}

function setProgress(progress)
  myProgress = progress
  progressNumber = progressTable[progress]
  if(progressNumber) then
    GUI.Progress:setValue(progressNumber,20)
    GUI.Progress.front:echo(myProgress)
  end
end</script>
				<eventHandlerList>
					<string>gmcp.char.vitals</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>SetStatus</name>
				<packageName></packageName>
				<script>-- Converting status text levels into numbers for bars/gauge

--Align
local alignTable = alignTable or {
["damned"] = 23, ["demonic"] = 22, ["beastly"] = 21, ["malevolent"] = 20, ["evil"] = 19,
["foul"] = 18, ["nasty"] = 17, ["wicked"] = 16, ["sinister"] = 15, ["unsympathetic"] = 14,
["untrustworth"] = 13, ["disagreeable"] = 12,
["neutral"] = 12,
["agreeable"] = 10, ["trustworthy"] = 9, ["sympathetic"] = 8, ["nice"] = 7, ["sweet"] = 6,
["good"] = 5, ["devout"] = 4, ["blessed"] = 3, ["saintly"] = 2, ["holy"] = 1}

function setAlign(align)
  myAlign = align
  alignNumber = alignTable[align]
  if(alignNumber) then
    GUI.Align:setValue(alignNumber,23)
    GUI.Align.front:echo(myAlign)
  end
end

--Mail
local mailTable = mailTable or {
["already read mail"] = 1, ["NEW mail"] = 2}

function setMail(mail)
  myMail = mail
  mailNumber = mailTable[mail]
  if(mailNumber) then
    MailBar:setValue(mailNumber,2,mail)
  end
end
</script>
				<eventHandlerList>
					<string>gmcp.char.status</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>GMCP_Vitals</name>
				<packageName></packageName>
				<script>-- Vitals that genesis server provides in gmcp:
-- health, mana, vitals, food, drink, intoxication

function GMCP_Vitals()

  if(gmcp.char.vitals.health ~= nil) then setHealth(gmcp.char.vitals.health) end

  if (gmcp.char.vitals.mana ~= nil) then setMana(gmcp.char.vitals.mana) end

  if (gmcp.char.vitals.fatigue ~= nil) then setFatigue(gmcp.char.vitals.fatigue) end

  if (gmcp.char.vitals.food ~= nil) then setFood(gmcp.char.vitals.food) end

  if (gmcp.char.vitals.drink ~= nil) then setDrink(gmcp.char.vitals.drink) end

  if (gmcp.char.vitals.intoxication ~= nil) then setIntox(gmcp.char.vitals.intoxication) end

 -- lua display(gmcp.char.vitals)
end

</script>
				<eventHandlerList>
					<string>gmcp.char.vitals</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>GMCP_Status</name>
				<packageName></packageName>
				<script>-- Status that genesis server provides in gmcp:
-- align, mail

function GMCP_Status()

  if(gmcp.char.status.alignment ~= nil) then setAlign(gmcp.char.status.alignment) end

end</script>
				<eventHandlerList>
					<string>gmcp.char.status</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Gauges</name>
				<packageName></packageName>
				<script>GUI.Footer = Geyser.HBox:new({
  name = "GUI.Footer",
  x = '3%', y = '52%',
  width = "94%",
  height = "48%",
},GUI.Left)

GUI.LeftColumn = Geyser.VBox:new({
  name = "GUI.LeftColumn",
},GUI.Footer)

GUI.GaugeBackCSS = CSSMan.new([[
  background-color: rgba(0,0,0);
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.GaugeFrontCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.Health = Geyser.Gauge:new({
  name = "GUI.Health",
},GUI.LeftColumn)
GUI.Health.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","firebrick")
GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Health.front:echo(myHealth)

GUI.Mana = Geyser.Gauge:new({
  name = "GUI.Mana",
},GUI.LeftColumn)
GUI.Mana.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","MediumBlue")
GUI.Mana.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Mana.front:echo(myMana)

GUI.Fatigue = Geyser.Gauge:new({
  name = "GUI.Fatigue",
},GUI.LeftColumn)
GUI.Fatigue.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","DarkGreen")
GUI.Fatigue.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Fatigue.front:echo(myFatigue)

GUI.Food = Geyser.Gauge:new({
  name = "GUI.Food",
},GUI.LeftColumn)
GUI.Food.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","sienna")
GUI.Food.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Food.front:echo(myFood)

GUI.Drink = Geyser.Gauge:new({
  name = "GUI.Drink",
},GUI.LeftColumn)
GUI.Drink.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","SeaGreen")
GUI.Drink.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Drink.front:echo(myDrink)

GUI.Intox = Geyser.Gauge:new({
  name = "GUI.Intox",
},GUI.LeftColumn)
GUI.Intox.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","BlueViolet")
GUI.Intox.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Intox.front:echo(myIntox)

GUI.Align = Geyser.Gauge:new({
  name = "GUI.Align",
},GUI.LeftColumn)
GUI.Align.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","DimGray")
GUI.Align.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Align.front:echo(myAlign)

GUI.Progress = Geyser.Gauge:new({
  name = "GUI.Progress",
},GUI.LeftColumn)
GUI.Progress.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","DarkSlateGray")
GUI.Progress.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Progress.front:echo(myProgress)

GUI.Mail = Geyser.Gauge:new({
  name = "GUI.Mail",
},GUI.LeftColumn)
GUI.Mail.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color"," black")
GUI.Mail.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Mail.front:echo(myMail)</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Misc</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>DarkThemeUninstall</name>
				<packageName></packageName>
				<script>--Removes darktheme upon uninstalling a package.
function DarkThemeUninstall()
  setAppStyleSheet([[]])
  echo("\nStylesheet reverted to default. Goodbye!")
end</script>
				<eventHandlerList>
					<string>sysUninstallPackage</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>DarkTheme</name>
				<packageName></packageName>
				<script>--Everything is better with darktheme.
local packagepath = getMudletHomeDir():gsub("\\", "/")..[[/DarkTheme/Images/]]
local txt_col =  "#808080"
local txt_col2 = "#404040"
local bg_col =  "#181818"
local bg_col2 = "#1c1c1c"
local bg_col3 = "#202020"
local bg_col_hover = "#282828"
local bd_col =  "#383838"
local bd_col2 = "#404040"
local bd_col_hover = "#909090"
local dim_col =  "#080808"
local dim_col2 = "#0e0e0e"
local hi_col = "#303030"
local test_col = "#ff0000"
--border styles: ridge, outset, inset, groove, double, dotted, dashed, dot-dash, and dot-dot-dash

dark_style1 = [[
QMainWindow, 
QSplitter, 
QSplitterHandle, 
QWidget#mainArea, 
dlgConnectionProfiles, 
QWidget#panel, 
QWidget#widget_searchAreaTop,
QMessageBox,
QWidget#widget_top,
QWidget#widget_right,
QWidget#widget_bottom {
   background-color: ]]..bg_col..[[; 
	 color: ]]..txt_col..[[;
}
QCheckBox[enabled="false"] {
   color: ]]..txt_col2..[[;
}
QToolTip {
    background-color:]]..bg_col2..[[; 
    color: ]]..txt_col..[[;
    padding: 5px;
    opacity: 220;
		border-width: 1px;
		border-style: solid;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
}
QWidget {
   color: ]]..txt_col..[[;
}
QDialog {
    background-color: ]]..bg_col..[[; 
}
QDockWidget {
    background-color: ]]..bg_col3..[[;
		color: ]]..txt_col..[[;
}
QDockWidget::close-button, QDockWidget::float-button {
    background: transparent;
}
QDockWidget::close-button:hover, QDockWidget::float-button:hover {
    background: rgba(255, 255, 255, 60);
		border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
}
QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
    background: rgba(255, 255, 255, 60);
}
QWidget:item:selected {
    background-color: ]]..hi_col..[[;
}
QMenuBar {
    background-color: ]]..bg_col..[[;
		color: ]]..txt_col..[[;
}
QMenu {
    border-width: 1px;
		border-style: solid;
    border-color: ]]..bd_col..[[;
		background-color: ]]..bg_col..[[;
    color: ]]..txt_col..[[;
    margin: 0px;
}
QMenu::separator {
    height: 1px;
    background-color: ]]..dim_col..[[;
    padding-left: 4px;
    margin-left: 5px;
    margin-right: 5px;
}
QMenuBar::item:pressed {
    border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
    color: ]]..txt_col..[[;
    margin-bottom:-1px;
    padding-bottom:1px;
}
QMenu::item:selected {
    color: ]]..txt_col..[[;
}
QMenu::item:disabled {
    background-color: ]]..bg_col..[[;
    color: ]]..txt_col2..[[;
}
QMenu:hover {
    background-color: ]]..bg_col..[[;
}
QMenu::item:hover {
    background-color: ]]..dim_col..[[;
}
QMenu::indicator {
    width: 18px;
    height: 18px;
}
QComboBox {
    background-color: ]]..dim_col..[[;
    selection-background-color: ]]..hi_col..[[;
    border-width: 1px;
    border-left-color: ]]..dim_col..[[;
		border-top-color: ]]..dim_col..[[;
		border-right-color: ]]..hi_col..[[;
		border-bottom-color: ]]..hi_col..[[;
    border-style: solid;
}
QComboBox::drop-down {
    background-color: ]]..bg_col..[[;
		color: #ff0000;
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 12px;
		border-width: 2px;
		border-style: solid;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-radius: 0px;
}
QAbstractSpinBox {
    padding: 1px;
		border-style: solid;
    border-left-color: ]]..dim_col..[[;
		border-top-color: ]]..dim_col..[[;
		border-right-color: ]]..hi_col..[[;
		border-bottom-color: ]]..hi_col..[[;
    background-color: ]]..dim_col..[[;
    color: ]]..txt_col..[[;
    border-radius: 0px;
}
QAbstractSpinBox:up-button {
    background-color: ]]..bg_col2..[[;
		border-width: 1px;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-style: solid;
    border-radius: 0px;
}
QAbstractSpinBox:down-button {
    background-color: ]]..bg_col2..[[;
		border-width: 1px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-radius: 0px;
}

QToolBar {
    background-color: ]]..bg_col..[[;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
}
QToolButton {
    background-color: ]]..bg_col..[[;
    border-radius: 0px;
    padding: 3px;
}
QToolButton:hover, QToolButton::menu-button:hover {
    background-color: ]]..bg_col2..[[;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;		
}
QToolButton:checked, QToolButton:pressed,
QToolButton::menu-button:pressed {
    background-color: ]]..dim_col..[[;;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..dim_col..[[;
		border-top-color: ]]..dim_col..[[;
		border-right-color: ]]..hi_col..[[;
		border-bottom-color: ]]..hi_col..[[;
}
QToolButton:checked {
    background-color: transparent;
    border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
}
QToolButton#togglePanel {
    background-color: ]]..bg_col..[[;
		border-width: 1px;
		border-style: solid;
		border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
}
QToolButton#togglePanel:hover {
    background-color: ]]..bg_col2..[[;
}
QPushButton::menu-indicator  {
    background-color: ]]..bg_col..[[;
    subcontrol-origin: padding;
    subcontrol-position: bottom right;
    left: 0px;
}
QPushButton {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col2..[[;
}
QPushButton:disabled {
    background-color: ]]..bg_col2..[[;
    border-width: 1px;
    border-color: ]]..dim_col..[[;
    border-style: solid;
    border-radius: 0px;
    color: ]]..txt_col..[[;
		padding-top: 4px;
    padding-bottom: 4px;
    padding-left: 10px;
    padding-right: 10px;
}
QPushButton:focus {
    background-color: ]]..bg_col2..[[;
    color: ]]..txt_col..[[;
}
QPushButton:pressed
{
    background-color: ]]..bg_col2..[[;
    padding-top: -15px;
    padding-bottom: -17px;
}
/* scrolling window background */
QAbstractScrollArea {
    border-radius: 0px;
    border-top:    1px solid ]]..dim_col..[[;
		border-left:   1px solid ]]..dim_col..[[;
		border-bottom: 1px solid ]]..hi_col..[[;
		border-right:  1px solid ]]..hi_col..[[;
    background-color: ]]..dim_col..[[;
		color: ]]..txt_col..[[;
}
]]
--
-- ================================== PART TWO ====================================
--
dark_style2 = [[
QListView::item:!selected:hover, QTreeView::item:!selected:hover  {
    background: rgba(40, 40, 40, 0.6);
    color:]]..txt_col..[[;
}
QListView::item:selected:hover, QTreeView::item:selected:hover  {
    background: #404040;
    color: ]]..txt_col..[[;
}
QListView::item:selected, QTreeView::item:selected  {
    background: ]]..bg_col2..[[;
    color: ]]..txt_col..[[;
}
QHeaderView::section  {
    background-color: ]]..bg_col..[[;
    color: ]]..txt_col..[[;
    padding: 1px;
		border-width: 1px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
    border-radius: 0px;
    text-align: center;
}
QHeaderView {
    background-color: ]]..bg_col..[[;
    border: 1px transparent;
    border-radius: 0px;
    margin: 0px;
    padding: 0px;
}
QLineEdit {
    background-color: ]]..dim_col..[[;
    padding: 1px;
    border-radius: 0px;
		border-top:    1px solid ]]..dim_col..[[;
		border-left:   1px solid ]]..dim_col..[[;
		border-bottom: 1px solid ]]..hi_col..[[;
		border-right:  1px solid ]]..hi_col..[[;
}
QLineEdit#pattern {
    background-color: ]]..bg_col..[[;
    padding: 1px;
		border-width: 1px;
		border-style: solid;
    border-color: ]]..bd_col..[[;
    border-radius: 0px;
}
QLineEdit#qt_spinbox_lineedit {
    padding: 1px;
		background-color: ]]..dim_col..[[;
}

/* --------profile area---------*/
QDialog#profile_preferences {
    background-color: ]]..dim_col2..[[;
}
QStackedWidget {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col3..[[;
}

/* PREFERENCES TABS */
/* unselected tabs */
QTabBar::tab:!selected {
    padding: 5px;
		margin-top: 2px;
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col..[[;
		border-width: 1px;
		border-style: solid;
		border-top-color: ]]..bd_col..[[;
		border-left-color: ]]..bd_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom: 0px transparent black;
		border-top-left-radius: 1px;
    border-top-right-radius: 1px;
}
/*selected tab*/
QTabBar::tab:selected {  
    padding: 5px;
    color: ]]..txt_col..[[;
		background-color: ]]..bg_col3..[[;
    border-top-left-radius: 1px;
    border-top-right-radius: 1px;
		border-width: 1px;
		border-style: solid;
		border-top-color: ]]..bd_col..[[;
		border-left-color: ]]..bd_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom: 0px transparent black;
}
QTabBar::tab:top:!selected:hover {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col_hover..[[;
}
QTabBar::tab:top:selected:hover {
    color: ]]..txt_col..[[;
    background-color: ]]..bg_col_hover..[[;
}
QColorDialog, QColorLuminancePicker {
    background-color: ]]..bg_col..[[;
}
QTabWidget::pane {
    border-width: 1px;
		border-style: solid;
    border-color-top: ]]..bg_col..[[;
		border-color-left: ]]..bg_col2..[[;
	  border-color-bottom: ]]..dim_col..[[;
		border-color-right: ]]..dim_col..[[;
    padding: 0px;
    margin: 0px;
}
QGroupBox {
    border-radius: 0px;
    margin-top: 5px;
		border-width: 1px;
		border-style: solid;
		border-top: ]]..bg_col..[[;
		border-left: ]]..bg_col..[[;
	  border-bottom: ]]..dim_col..[[;
		border-right: ]]..dim_col..[[;
}
QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top center;
    padding-left:  0px;
    padding-right: 1px;
    margin-top: -5px;
}
QGroupBox {
    border: 1px solid ]]..bd_col..[[;
		padding: 5px;
		margin: 5px;
}
dlgRoomExits {
    background-color: ]]..bg_col..[[;
}
QGroupBox#groupBox_normalExits, QGroupBox#groupBox_specialExits {
    background-color: ]]..bg_col2..[[;
}
QFrame#frame_key {
    background-color: ]]..bg_col..[[;
		border-width: 1px;
		border-style: solid;
		border-color: ]]..bd_col..[[;
}
/* SCROLLBAR AREA */
/*vertical scroll*/
  QScrollBar:vertical {
    background: ]]..dim_col2..[[;
    width: 15px;
    margin: 16px 0 16px 0;
  }
  QScrollBar::handle:vertical {
    background-color: ]]..bg_col..[[;
    min-height: 20px;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
  QScrollBar::add-line:vertical {
    background-color: ]]..bg_col..[[;
    height: 12px;
    subcontrol-position: bottom;
    subcontrol-origin: margin;
	  border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }

  QScrollBar::sub-line:vertical {
    background-color: ]]..bg_col..[[;
    height: 12px;
    subcontrol-position: top;
    subcontrol-origin: margin;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
  QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
    background: grey;
    width: 4px;
    height: 4px;
  }
  QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: none;
  }
	
/* --- horizontal scroll --- */
  QScrollBar:horizontal {
    background: ]]..dim_col2..[[;
    height: 16px;
    margin: 0 16px 0 16px;
  }
	
  QScrollBar::handle:horizontal {
    background-color: ]]..bg_col..[[;
    min-width: 20px;
		height: 15px;
    border-radius: 1px;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
	
  QScrollBar::add-line:horizontal {
    background-color: ]]..bg_col..[[;
    height: 12px;
    width: 12px;
    subcontrol-position: right;
    subcontrol-origin: margin;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
	
  QScrollBar::sub-line:horizontal {
    background-color: ]]..bg_col..[[;
    height: 12px;
    width: 12px;
    subcontrol-position: left;
    subcontrol-origin: margin;
		border-width: 2px;
		border-style: solid;
    border-left-color: ]]..hi_col..[[;
		border-top-color: ]]..hi_col..[[;
		border-right-color: ]]..dim_col..[[;
		border-bottom-color: ]]..dim_col..[[;
  }
	QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal {
    background: grey;
    width: 4px;
    height: 4px;
  }
  QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    background: none;
  }
 ]]
 dark_style3 = [[
 
 /* Trigger Area Elements */
 QWidget#widget_top, QLabel#label_patternNumber {
     background-color: ]]..bg_col..[[; }
 QWidget#widget_4 {
      background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_stayOpen {
     background-color: #2a2a20; }
 QGroupBox#groupBox_soundTrigger {
     background-color: #202a20; }
 QWidget#widget_13, QWidget#widget_3 {
     background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_multiLineTrigger {
     background-color: #252530; }
 QWidget#widget_12 {
     background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_filterTrigger {
      background-color: #302530; }
 QWidget#widget_11 {
     background-color: ]]..bg_col..[[; }
 QGroupBox#groupBox_perlSlashGOption {
     background-color: #382525; }
 QGroupBox#groupBox_triggerColorizer {
     background-color: #203038; }
 QWidget#widget_10 {
     background-color: ]]..bg_col..[[; }
		 
 /* ------ variable area things-------- */
 QWidget#widget_variable_key_type { background-color: #352535; }
 QWidget#widget_variable_var_type { background-color: #352525; }
 QWidget#widget_variable_hide { background-color: #353525; }
 
 QTabBar QToolButton::right-arrow:enabled {
     image: url(]]..packagepath..[[right_arrow.png);
 }
 QTabBar QToolButton::left-arrow:enabled {
     image: url(]]..packagepath..[[left_arrow.png);
 }
QTabBar QToolButton::right-arrow:disabled {
     image: url(]]..packagepath..[[right_arrow_disabled.png);
}
 QTabBar QToolButton::left-arrow:disabled {
     image: url(]]..packagepath..[[left_arrow_disabled.png);
}


QTreeView::branch {
        border-image: url(]]..packagepath..[[transparent.png);
    }
    QTreeView::branch:closed:has-children {
        image: url(]]..packagepath..[[branch_closed.png);
    }
    QTreeView::branch:open:has-children {
        image: url(]]..packagepath..[[branch_open.png);
    }
    QTreeView::branch:closed:has-children:hover {
        image: url(]]..packagepath..[[branch_closed-on.png);
    }
    QTreeView::branch:open:has-children:hover  {
        image: url(]]..packagepath..[[branch_open-on.png);
    }
 
 
QSizeGrip {
    image: url(]]..packagepath..[[sizegrip.png);
    width: 12px;
    height: 12px;
}
QToolBar::handle:horizontal {
    image: url(]]..packagepath..[[Hmovetoolbar.png);
}
QToolBar::handle:vertical {
    image: url(]]..packagepath..[[Vmovetoolbar.png);
}
QToolBar::separator:horizontal {
    image: url(]]..packagepath..[[Hsepartoolbar.png);
}
QToolBar::separator:vertical {
    image: url(]]..packagepath..[[Vsepartoolbar.png);
}
QAbstractSpinBox::up-arrow,QAbstractSpinBox::up-arrow:disabled,QAbstractSpinBox::up-arrow:off {
    image: url(]]..packagepath..[[up_arrow_disabled.png);
    width: 8px;
    height: 8px;
}
QAbstractSpinBox::up-arrow:hover {
    image: url(]]..packagepath..[[up_arrow.png);
}
QAbstractSpinBox::down-arrow,QAbstractSpinBox::down-arrow:disabled,QAbstractSpinBox::down-arrow:off {
    image: url(]]..packagepath..[[down_arrow_disabled.png);
    width: 8px;
    height: 8px;
}
QAbstractSpinBox::down-arrow:hover {
    image: url(]]..packagepath..[[down_arrow.png);
}
]]
DarkStyle = dark_style1..dark_style2..dark_style3
function DarkTheme()
setAppStyleSheet(DarkStyle)
end</script>
				<eventHandlerList>
					<string>sysLoadEvent</string>
					<string>sysInstall</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Basics</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>commandQueue</name>
				<packageName></packageName>
				<script>--essentially "do" with an optional timer
--usage: &lt;q &lt;command1&gt; &lt;seconds to wait&gt; &lt;command2&gt;. If blank all commands will fire instantly. 
function commandQueue(...)
        if(type(arg[1]) == "table" and #arg[1] &gt; 0) then
                local v = table.remove(arg[1], 1)
                local next = function() commandQueue(arg[1]) end
                if(type(v) == "number") then   
                        tempTimer(v, next)
                else
                        expandAlias(v)
                        commandQueue(arg[1])
                end
        else
                commandQueue(arg)
        end
end


-- commandQueue Alias:
local reg,al = [[^q (.*)]],
[[local tc = {}
local args = matches[2]

for c in args:gmatch('([^,]+)') do
        if(tonumber(c)) then
                table.insert(tc, tonumber(c))
        else
                c = string.trim(c)
                table.insert(tc, c)
        end
end
local c1,c2 = "&lt;slate_blue&gt;","&lt;white&gt;"
cecho(c1.."Command queue: ".. c2 .. table.concat(tc, c1..", "..c2) .. "\n")
commandQueue(unpack(tc))
]]

aliastable = aliastable or {}
if( aliastable.q ~= nil and exists(aliastable.q,"alias") &gt; 0 ) then
        killAlias(aliastable.q)
        aliastable.q = nil
end
aliastable.q = tempAlias(reg, al)
 </script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>wartables</name>
				<packageName></packageName>
				<script>--The table contains keys based on the
--description of the gem, with the effect
--of the gem and which slot the object
--fits into.
selectCurrentLine()

warTable = warTable or {
   ytopaz= {enh = "Scry Protection", stone="Armour"},
   amber= {enh = "Darkvision", stone="Armour"},
   garnet= {enh = "Enhanced Reflexes", stone="Armour"},
   peridot= {enh = "Truesight", stone="Armour"},
   agate= {enh = "Waterbreath", stone="Armour"},
   opal= {enh = "Life Protection", stone="Armour"},
   jade= {enh = "Poison Protection", stone="Armour"},

   pyrite= {enh = "Earth Protection", stone="Armour"},   
   beryl={enh = "Cold Protection", stone="Armour"},
   carnelian={enh = "Fire Protection", stone="Armour"},
   topaz={enh = "+Water Protection", stone="Armour"},
   spinel={enh = "+Air Protection", stone="Armour"},
   bloodstone={enh = "+Death Protection", stone="Armour"},

   vsapphire={enh = "Sneak +5", stone="Armour"},
   chalcedony={enh = "Enchantment +5", stone="Armour"},
   squartz={enh = "Divination +5", stone="Armour"},
   rquartz={enh = "Transmutation +5", stone="Armour"},
   amethyst={enh = "Conjuration +5", stone="Armour"},
   moonstone={enh = "Featherweight", stone="Armour"},

   mquartz={enh = "Illusion +5", stone="Armour"},
   musapphire={enh = "Open Lock +5", stone="Armour"},
   gsapphire={enh = "Parry +5", stone="Armour"},
   masapphire={enh = "Remove Traps +5", stone="Armour"},
   bagate={enh = "Abjuration +5", stone="Armour"},
   blusapphire={enh = "Defense +5", stone="Armour"},
   blasapphire={enh = "Hide +5", stone="Armour"},
   asapphire={enh = "Two-Handed Combat +5", stone="Armour"},
   ytourmaline={enh = "Air Spells +5", stone="Weapon"},
   wdiamond={enh = "Increased Hit", stone="Weapon"},
   vtourmaline={enh = "Life Spells +5", stone="Weapon"},

   rtourmaline={enh = "Fire Spells +5", stone="Weapon"},
   bltourmaline={enh = "Earth Spells +5", stone="Weapon"},
   brtourmaline={enh = "Water Spells +5", stone="Weapon"},
   bldiamond={enh = "Increase Damage", stone="Weapon"},
   
}</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>tables</name>
				<packageName></packageName>
				<script>-- This script creates the bodypartsTable. Each bodypart is a key, with
-- a corresponding value of both the item worn on each bodypart, and the
-- current condition of each piece of armour.
-- We are only interested in bodyparts where you can get hit by mobs,
-- so we don't bother mapping stuff like the newbie pin worn on your chest

--The imbuementstable contains keys based on the
--description of the enhancement, with the effect
--of the enhancement and which stone the object
--disenhancets into.

imbTable = imbTable or {
   musk= {enh = "+str", stone="ogre"},
   vanilla= {enh = "+dis", stone="steel"},
   alcohol= {enh = "+con", stone="dwarf"},
   lavender= {enh = "+int", stone="gnome"},
   sage= {enh = "+wis", stone="elf"},
   cinnamon= {enh = "+dex", stone="hobbit"},
   stallion= {enh = "+polearm", stone="skewer"},

   opalesque= {enh = "+water spells", stone="surf"},   
   grey={enh = "+death spells", stone="corpse"},
   brown={enh = "+earth spells", stone="soil"},
   blue={enh = "+life spells", stone="ankh"},
   azure={enh = "+air spells", stone="gust"},
   rose={enh = "+fire spells", stone="ember"},

   stallion={enh = "+polearm", stone="skewer"},
   lion={enh = "+sword", stone="edge"},
   spider={enh = "+knife", stone="needle"},
   boar={enh = "+club", stone="crush"},
   badger={enh = "+axe", stone="cleave"},
   monkey={enh = "+unarmed", stone="palm"},

   beryl={enh = "slay elf", stone="char"},
   bone={enh = "slay undead", stone="life"},
   diamond={enh = "slay dragon", stone="heaven"},
   granite={enh = "slay ogre", stone="doom"},
   ivory={enh = "slay minotaur", stone="hoof"},
   mithril={enh = "slay dwarf", stone="gall"},
   onyx={enh = "slay goblin", stone="dark"},
   peridot={enh = "slay gnome", stone="gear"},
   quartz={enh = "slay halfling", stone="pie"},
   sapphire={enh = "slay human", stone="fell"},
   topaz={enh = "slay troll", stone="fire"},

   light={enh = "+light", stone="morning"},
   darkness={enh = "-light", stone="night"},
   crimson={enh = "+spellcraft", stone="lode"},
   wellbeing={enh = "+AC", stone="ward"},
   viciousness={enh = "+weapon-acc", stone="guide"},
   malevolence={enh = "+damage", stone="sling"},

   unease={enh = "resist life", stone="mummy"},
   goosebumps={enh = "resist cold", stone="wool"},
   sneeze={enh = "resist poison", stone="sweat"},
   dull={enh = "resist magic", stone="quiet"},
   tickle={enh = "resist water", stone="duck"},
   calm={enh = "resist fire", stone="powder"},
   ringing={enh = "resist air", stone="tarp"},
   itching={enh = "resist acid", stone="salve"},
   hairraising={enh = "resist electricity", stone="rubber"},
   nausea={enh = "resist death", stone="lars"},
   drowsiness={enh = "resist earth", stone="river"},

   frost={enh = "+cold damage", stone="snap"},
   disturbance={enh = "+air-bolts damage", stone="blow"},
   hissing={enh = "+heat damage", stone="blue"},
   fluctuation={enh = "+earth damage", stone="sink"},
   acid={enh = "+acid damage", stone="rust"},
   moisture={enh = "+poison damage", stone="asp"},
   decay={enh = "+death damage", stone="black"},
   flames={enh = "+elemental damage", stone="orange"},
   electricity={enh = "+electricity damage", stone="amp"},

   security={enh = "heals user", stone="balm"},
   sparkle={enh = "darkvision", stone="torch"},
   glow={enh = "+awareness", stone="eye"},
   gleam={enh = "increased durability", stone="iron"},
   whine={enh = "speed", stone="mercury"},
   drone={enh = "slow opponent", stone="grog"},
   clicking={enh = "+blindfighting", stone="mole"},
   purring={enh = "+hide/sneak", stone="rodent"},
   silvery={enh = "+two handed combat", stone="twin"},
   purple={enh = "+parry", stone="deft"},
   swirling={enh = "+defence", stone="shield"}
   
}</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>GenesisMapper</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>init</name>
				<packageName></packageName>
				<script>---------------------------------
-- Yell at me if you find bugs --
--  Ingame character: Merkrux  --
--   aka Mould#9235 (discord)  --
-- script creator Merkrux --
-- Bocephus (discord) Bo#3382 --
-- for any ongoing questions or bug reporting --
---------------------------------
mudlet = mudlet or {}
mudlet.mapper_script = true
mapper = mapper or {}
mapper.mapping = mapper.mapping or false
mapper.currentRoomID = mapper.currentRoomID or -1
mapper.lastRoomID = mapper.lastRoomID or -1
mapper.currentAreaID = mapper.currentAreaID or -1
-- Don't touch!
mapper.handlableInterruptionHeader = "#HIH@HIH#"
mapper.seaRoomName = mapper.seaRoomName or "BUG"
mapper.shipTypes = {"boat", "ship", "warship"}
if not mapper.capturedInfo then
  mapper.resetCapturedInfo()
end
function mapper.save()
  if string.char(getMudletHomeDir():byte()) == "/" then
    _sep = "/"
  else
    _sep = "\\"
  end
  local savePath = getMudletHomeDir() .. _sep .. "mapper.lua"
  table.save(savePath, mapper.config)
end

function mapper.load()
  if string.char(getMudletHomeDir():byte()) == "/" then
    _sep = "/"
  else
    _sep = "\\"
  end
  local savePath = getMudletHomeDir() .. _sep .. "mapper.lua"
  if (io.exists(savePath)) then
    table.load(savePath, mapper.config)
  end
end

mapper.config = mapper.config or {}
if not mapper.configLoaded then
  mapper.load()
end
mapper.configLoaded = true
mapper.config.waypoints = mapper.config.waypoints or {}
mapper.notSpecialExits = {"home", "look", "l", "disembark", "beroff", "ch","ber"}     -- add any triggers that may fire while mapping
mapper.seaKeywords = {"Vingaard", "Estwilde", "Courrain", "Bloodsea", "Nordmaar","Horned"}   --add any new areas in Bloodsea here
mapper.exitMap =
  {
    n = 1,
    north = 1,
    ne = 2,
    northeast = 2,
    nw = 3,
    northwest = 3,
    e = 4,
    east = 4,
    w = 5,
    west = 5,
    s = 6,
    south = 6,
    se = 7,
    southeast = 7,
    sw = 8,
    southwest = 8,
    u = 9,
    up = 9,
    d = 10,
    down = 10,
    [1] = "north",
    [2] = "northeast",
    [3] = "northwest",
    [4] = "east",
    [5] = "west",
    [6] = "south",
    [7] = "southeast",
    [8] = "southwest",
    [9] = "up",
    [10] = "down",
  }
mapper.exitMapReversed =
  {
    s = 1,
    south = 1,
    sw = 2,
    southwest = 2,
    se = 3,
    southeast = 3,
    w = 4,
    west = 4,
    e = 5,
    east = 5,
    n = 6,
    north = 6,
    nw = 7,
    northwest = 7,
    ne = 8,
    northeast = 8,
    d = 9,
    down = 9,
    u = 10,
    up = 10,
    [1] = "south",
    [2] = "southwest",
    [3] = "southeast",
    [4] = "west",
    [5] = "east",
    [6] = "north",
    [7] = "northwest",
    [8] = "northeast",
    [9] = "down",
    [10] = "up",
  }</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Common</name>
				<packageName></packageName>
				<script>function mapper.resetCapturedInfo()
  mapper.capturedInfo = {}
  mapper.capturedInfo.x = 0
  mapper.capturedInfo.y = 0
  mapper.capturedInfo.zoomx = 0
  mapper.capturedInfo.zoomy = 0
  mapper.capturedInfo.name = "blank"
  mapper.capturedInfo.hashID = -1
  mapper.capturedInfo.exits = {}
end

function mapper.seaPromptReceived()
  mapper.capturedInfo.x = gmcp.room.info.x
  mapper.capturedInfo.y = gmcp.room.info.y
  mapper.capturedInfo.zoomx = gmcp.room.info.zoomx
  mapper.capturedInfo.zoomy = gmcp.room.info.zoomy
  mapper.capturedInfo.hashID =
    string.format(
      [[sea%dC%dZ%dC%dA%s]],
      (mapper.capturedInfo.x or 0),
      (mapper.capturedInfo.y or 0),
      (mapper.capturedInfo.zoomx or 0),
      (mapper.capturedInfo.zoomy or 0),
      mapper.findSeaKeywords(mapper.capturedInfo.name)
    )
  mapper.roomInfoUpdated()
end

function mapper.setMapping(status)
  mapper.mapping = status
  if mapper.mapping then
    mapper.prompt("mapping enabled.")
  else
    mapper.prompt("mapping disabled.")
  end
end

function mapper.roomInfoUpdated()
  mapper.lastRoomID = mapper.currentRoomID
  mapper.setCurrentRoom(mapper.capturedInfo)
  if mapper.isSpeedWalking() then
    mapper.onSpeedWalk()
  elseif mapper.mapping then
    mapper.mapRoom()
  end
end

function mapper.setCurrentRoom(room)
  mapper.currentRoomID = getRoomIDbyHash(room.hashID)
  if mapper.currentRoomID ~= -1 then
    centerview(mapper.currentRoomID)
  end
  mapper.updateCurrentAreaID()
end

function mapper.updateCurrentAreaID()
  local rooms = getRooms()
  if rooms[mapper.currentRoomID] then
    mapper.currentAreaID = getRoomArea(mapper.currentRoomID)
  elseif rooms[mapper.lastRoomID] then
    mapper.currentAreaID = getRoomArea(mapper.lastRoomID)
  else
    mapper.currentAreaID = -1
  end
end

function mapper.findRoom(name)
  local rooms
  if tonumber(name) then
    rooms = {}
    rooms[id] = name
  else
    rooms = searchRoom(name)
  end
  mapper.displayIDNameList(rooms, "Found:", "goto", "mapper.gotoID")
end

function mapper.lookup(input)
  input = input:trim()
  if tonumber(input) then
    local id = tonumber(input)
    if getRoomName(id) then
      centerview(id)
    else
      mapper.prompt("No such room")
    end
  else
    areas, count, first = mapper.searchAreas(matches[2])
    if count == 0 then
      mapper.prompt("No such area.")
    elseif count == 1 then
      mapper.centerAtArea(first)
    else
      mapper.displayIDNameList(areas, "Areas:", "Center at", "mapper.centerAtArea")
    end
  end
end

function mapper.isSailing()
  return table.contains(mapper.shipTypes, gmcp.room.info.short:match("Inside an? [a-zA-Z ]+ (%a+)"))
end

function mapper.moveRoom(roomID, direction)
  if roomID == -1 then
    mapper.prompt("Even goblins know that you can't move an unmapped room.")
  else
    local x, y, z = mapper.getRelativeCoordinates(roomID, mapper.exitMap[direction])
    setRoomCoordinates(roomID, x, y, z)
    centerview(roomID)
  end
end

function mapper.findSeaKeywords(text)
  local text = text:lower()
  local result = {}
  for _, keyword in ipairs(mapper.seaKeywords) do
    if text:find(keyword:lower()) then
      table.insert(result, keyword)
    end
  end
  return table.concat(result, "-")
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Goto</name>
				<packageName></packageName>
				<script>function mapper.gotoWaypoint(name, hideMessage)
  centerview(mapper.currentRoomID)
  asdf = name
  if not mapper.config.waypoints[name] then
    if not hideMessage then
      mapper.prompt("No such waypoint.")
    end
    return false
  else
    gotoRoom(getRoomIDbyHash(mapper.config.waypoints[name]))
    return true
  end
end

function mapper.gotoAreaID(id, hideMessage)
  centerview(mapper.currentRoomID)
  local rooms = getAreaRooms(tonumber(id))
  if not rooms or not rooms[0] then
    if not hideMessage then
      mapper.prompt("The area is empty.")
    end
    return false
  else
    if not gotoRoom(rooms[0]) then
      mapper.prompt("Don't know how to get there.")
    end
    return true
  end
end

function mapper.gotoArea(areaName, hideMessage)
  centerview(mapper.currentRoomID)
  local areas, count, first = mapper.searchAreas(areaName)
  if count == 1 then
    return mapper.gotoAreaID(first)
  elseif count &gt; 1 and not hideMessage then
    mapper.displayAreas(areas)
    return true
  end
  if not hideMessage then
    mapper.prompt("No such area.")
  end
  return false
end

function mapper.gotoHashID(hashID, hideMessage)
  return mapper.gotoID(getRoomIDbyHash(hashID), hideMessage)
end

function mapper.gotoID(id, hideMessage)
  centerview(mapper.currentRoomID)
  id = tonumber(id)
  if id == -1 or not id or not getRoomArea(id) then
    if not hideMessage then
      mapper.prompt("No such room.")
    end
    return false
  else
    if not gotoRoom(id) then
        mapper.prompt("Don't know how to get there.")
    end
    return true
  end
end

function mapper.goto(input)
  input = input:trim()
  if mapper.gotoWaypoint(input, true) then
  elseif mapper.gotoHashID(input, true) then
  elseif mapper.gotoID(input, true) then
  elseif mapper.gotoArea(input, false) then
  else
    mapper.prompt("Don't know how to get there.")
  end
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Display</name>
				<packageName></packageName>
				<script>function mapper.prompt(msg)
  cecho("\n&lt;purple&gt;(&lt;LimeGreen&gt;mapper&lt;purple&gt;): &lt;white&gt;" .. msg .. "\n")
end

function mapper.displayAreas(areas)
  mapper.displayIDNameList(areas, "Areas:", "goto", "mapper.gotoAreaID")
end

function mapper.displayIDNameList(list, header, tooltip, func)
  mapper.prompt(header)
  for id, name in pairs(list) do
    local shortID = mapper.ui.padAndTruncate(tostring(id), 6)
    local shortName = mapper.ui.padAndTruncate(name, 40)
    cechoLink(
      " &lt;green&gt;" .. shortID .. " &lt;white&gt;" .. shortName .. "\n",
      func.."(" .. id .. ")",
      tooltip.." " .. name,
      true
    )
  end
  echo("")
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Waypoints</name>
				<packageName></packageName>
				<script>function mapper.addWaypoint(name, hashID)
  hashID = hashID or mapper.capturedInfo.hashID
  
  if not hashID then
    mapper.prompt("Room not found :(")
  end
  
  if mapper.config.waypoints[name] then
    mapper.prompt("A waypoint already exists with such name.")
  else
    mapper.config.waypoints[name] = hashID
    mapper.save()
    mapper.prompt("Success!")
  end
end

function mapper.deleteWaypoint(name)
  if mapper.config.waypoints[name] then
    mapper.config.waypoints[name] = nil
    mapper.save()
    mapper.prompt("Success!")
  else
    mapper.prompt("No such waypoint.")
  end
end

function mapper.listWaypoints()
  if #mapper.config.waypoints == 0 then
  end
  mapper.prompt("Waypoints:")
  for waypointName, hashID in pairs(mapper.config.waypoints) do
    local id = getRoomIDbyHash(hashID)
    local area = getRoomAreaName(getRoomArea(id))
    local room = mapper.ui.padAndTruncate(getRoomName(id), 40)
    local nameSize = 10
    local areaSize = 15
    
    local simpleWaypointName = mapper.ui.padAndTruncate(waypointName, nameSize)
    local area = mapper.ui.padAndTruncate(area, areaSize)
    
    cechoLink(
      string.format(" &lt;blue&gt;%s&lt;green&gt; %s&lt;white&gt; %s\n", simpleWaypointName, area, room),
      "mapper.gotoWaypoint(\"" .. waypointName .. "\")",
      "goto " .. waypointName,
      true
    )
  end
  echo("")
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Mapping</name>
				<packageName></packageName>
				<script>function mapper.mapRoom()
  if not mapper.mapping or mapper.isSpeedWalking() then
    return
  end
  if mapper.currentAreaID == -1 and not mapper.newAreaName then
    mapper.prompt("Don't know where to put this room :(")
    mapper.prompt("Please create a new area.")
    mapper.prompt("You can use \"mmap an &lt;area name&gt;\".")
    return
  end
  if mapper.newAreaName then
    mapper.currentAreaID = addAreaName(mapper.newAreaName)
    mapper.newAreaName = nil
  end
  if mapper.currentRoomID == -1 then
    mapper.currentRoomID = createRoomID()
    addRoom(mapper.currentRoomID)
    setRoomIDbyHash(mapper.currentRoomID, mapper.capturedInfo.hashID)
    setRoomArea(mapper.currentRoomID, mapper.currentAreaID)
    setRoomName(mapper.currentRoomID, mapper.capturedInfo.name)
    local x, y, z = mapper.getCalculatedCoordinates(mapper.lastRoomID, command)
    setRoomCoordinates(mapper.currentRoomID, x, y, z)
    mapper.prompt(
      string.format(
        "Mapped a new room: #%d %s (%s)",
        mapper.currentRoomID,
        mapper.capturedInfo.name,
        getAreaTableSwap()[mapper.currentAreaID]
      )
    )
  end
  mapper.updateExitStubs(mapper.currentRoomID, mapper.capturedInfo.exits)
  mapper.connectRooms(mapper.lastRoomID, mapper.currentRoomID, command)
  centerview(mapper.currentRoomID)
end

function mapper.updateExitStubs(roomID, exits)
  local exitStubs = getExitStubs1(roomID)
  local exits = getRoomExits(roomID)
  for _, exit in pairs(mapper.capturedInfo.exits) do
    local exitNumber = mapper.exitMap[exit]
    -- skip to avoid the warning
    if table.contains(exitStubs, exitNumber) or table.contains(exits, exit) then
    elseif exitNumber ~= nil then
      setExitStub(roomID, exitNumber, true)
    else
      setRoomEnv(roomID, 267)
    end
  end
end

function mapper.canConnectStubs(roomID, exits)
  local exitStubs = getExitStubs1(roomID)
  return type(exitStubs) ~= "number" and table.contains(exitStubs, exits[command])
end

function mapper.filterDirection(direction)
  local commonDirectionExtensions = {"sail", "swim"}
  local dir = direction:lower()
  for i, ext in ipairs(commonDirectionExtensions) do
    dir = dir:gsub(ext, "")
    if dir:find(ext) then
      return dir:trim(), ext
    end
  end
  return dir:trim()
end

function mapper.addExitStubs(roomId)
  for exit = 1, table.getn(mapper.capturedInfo.exits) do
    local exitMapNo = mapper.exitMap[mapper.capturedInfo.exits[exit]]
    if exitMapNo ~= nil and getRoomExits(roomId)[mapper.capturedInfo.exits[exit]] == nil then
      setExitStub(roomId, exitMapNo, true)
    end
  end
end

function mapper.getCalculatedCoordinates(fromID, command)
  if mapper.firstRoomOrLookCmd() then
    return 0, 0, 0
  end
  
  local exit = mapper.exitMap[mapper.filterDirection(command)]
  if not exit then
    mapper.prompt("NON STANDARD MOVE COMMAND - PLEASE MOVE THE ROOM IF ITS POSITION IS WRONG!!!")
    local x, y, z = mapper.getClosestEmptyCoordinates(fromID)
    
    if not x then
      while getRoomsByPosition(getRoomArea(fromID), x, y, z)[0] ~= nil do
        x = x + 1
      end
    end
    
    return x, y, z
  end
  
  return mapper.getRelativeCoordinates(fromID, exit)
end

function mapper.getRelativeCoordinates(roomID, exitNumber)
  local x, y, z = getRoomCoordinates(roomID)
  
  if  exitNumber == mapper.exitMap.n then
    y = y + 1
  elseif  exitNumber == mapper.exitMap.s then
    y = y - 1
  elseif  exitNumber == mapper.exitMap.e then
    x = x + 1
  elseif  exitNumber == mapper.exitMap.w then
    x = x - 1
  elseif  exitNumber == mapper.exitMap.ne then
    x = x + 1;
    y = y + 1
  elseif  exitNumber == mapper.exitMap.se then
    x = x + 1;
    y = y - 1
  elseif  exitNumber == mapper.exitMap.sw then
    x = x - 1;
    y = y - 1
  elseif  exitNumber == mapper.exitMap.nw then
    x = x - 1;
    y = y + 1
  elseif  exitNumber == mapper.exitMap.u then
    z = z + 1
  elseif  exitNumber == mapper.exitMap.d then
    z = z - 1
  end
  return x, y, z
end

function mapper.connectRooms(fromID, toID, command)
  if fromID == -1 or mapper.roomsConnected(fromID, toID) or fromID == toID then
    return
  end
  if mapper.exitMap[command] ~= nil then
    if
      mapper.canConnectStubs(toID, mapper.exitMapReversed) and
      mapper.canConnectStubs(fromID, mapper.exitMap)
    then
        -- At the time of writing this, connectExitStub was buggy
        setExit(fromID, toID, mapper.exitMap[command])
        setExit(toID, fromID, mapper.exitMapReversed[command])
      return
    end
    --connect one way exit only when exit from last room does not exist yet
    if fromID ~= -1 and getRoomExits(fromID)[mapper.exitMap[mapper.exitMap[command]]] == nil or command == "in" or command == "out" then
      setExit(fromID, toID, mapper.exitMap[command])
      mapper.prompt(
        "standard exit want to connect " .. fromID .. " to " .. toID .. " with " .. command
      )
    end
  else
    --non standard exit
    if getSpecialExitsSwap(fromID)[command] == nil then
      if not table.contains(mapper.notSpecialExits, command) then
        addSpecialExit(fromID, toID, command)
        local dir, ext = mapper.filterDirection(command)
        display(dir, ext)
        if ext and mapper.exitMap[dir] then
          addSpecialExit(toID, fromID, ext..mapper.exitMapReversed[dir])
        else
          setRoomEnv(toID, 267)
          setRoomEnv(fromID, 267)
          mapper.prompt(
            "Special exit want to connect " .. fromID .. " to " .. toID .. " with " .. command
          )
        end
      end
    end
  end
end

function mapper.roomsConnected(fromID, toID)
  if
    table.contains(getRoomExits(fromID), toID) or
    table.contains(getSpecialExits(fromID), toID)
  then
    if
      table.contains(getRoomExits(toID), fromID) or
      table.contains(getSpecialExits(toID), fromID)
    then
      return true
    end
  end
  return false
end

function mapper.firstRoomOrLookCmd()
  return mapper.lastRoomID == -1 or command == "look" or command == "l" or command == "glance"
end

function mapper.getClosestEmptyCoordinates(id)
  local x, y, z = getRoomCoordinates(id)
  local areaID = getRoomArea(id)

  local function round(num)
    local sign = num &gt;= 0 and 1 or -1
    return math.ceil(math.abs(num) - 0.49) * sign
  end

  local standardDirectionNumber = 8
  local degStep = 2 * math.pi / standardDirectionNumber
  
  for i = 1, 8 do
    local deg = -degStep * (i + 5)
    local tmpX = round(math.cos(deg))
    local tmpY = round(math.sin(deg))
    if not getRoomsByPosition(areaID, tmpX + x, tmpY + y, z)[0] then
      return tmpX + x, tmpY + y, z
    end
  end
  
  return nil
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Areas</name>
				<packageName></packageName>
				<script>function mapper.newArea(name)
  if not mapper.mapping then
    mapper.prompt("Mapping is disabled.")
  elseif getAreaTable()[name] then
    mapper.prompt("That area name is already taken.")
  else
    mapper.newAreaName = name
    mapper.prompt("The next unmapped room will be created in "..name..".")
  end
end

function mapper.newAreaHere(name)
  if not mapper.mapping then
    mapper.prompt("Mapping is disabled.")
  elseif getAreaTable()[name] then
    mapper.prompt("That area name is already taken.")
  else
    if mapper.currentRoomID == -1 then
      mapper.newArea(name)
      mapper.mapRoom()
    else
      mapper.currentAreaID = addAreaName(name)
      setRoomArea(mapper.currentRoomID, mapper.currentAreaID)
      setRoomCoordinates(mapper.currentRoomID, 0, 0, 0)
    end

    centerview(mapper.currentRoomID)
  end
end

function mapper.deleteArea(id)
  local area = tonumber(id)
  local allAreas = getAreaTableSwap()
  local areaToDelete = allAreas[area]
  if not area then
    mapper.prompt("You need to provide an area id.")
  elseif areaToDelete == nil then
    mapper.prompt("No such area.")
  elseif mapper.currentAreaID == id then
    mapper.prompt("You can't delete the area where you are currently located.")
  else
    deleteArea(area)
    mapper.prompt("Deleted area " .. areaToDelete)
  end
end

function mapper.listAreas()
  mapper.displayAreas(mapper.searchAreas(""))
end

function mapper.renameArea(id, name)
  setAreaName(id, name)
  mapper.prompt("Renamed area #" .. id .. " to " .. name..".")
end

function mapper.searchAreas(keyword)
  local areas = {}
  local count = 0
  local first
  
  for name, id in pairs(getAreaTable()) do
    if name:lower():find(keyword:lower()) and id ~= -1 then
      areas[id] = name
      
      first = first or id
      
      table.insert(areas, area)
      count = count + 1
    end
  end
  
  return areas, count, first
end

function mapper.centerAtArea(first)
  local rooms = getAreaRooms(first)
  
  if rooms[0] then
    centerview(rooms[0])
  else
    mapper.prompt("The area is empty.")
  end
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Speedwalk</name>
				<packageName></packageName>
				<script>function doSpeedWalk()
  raiseEvent("stopSpeedWalk")
  if #speedWalkDir == 0 then
    mapper.prompt("We're already there.")
    return
  end
  mapper.prompt("Rooms we'll pass through: " .. table.concat(speedWalkPath, ", ") .. ".")
  -- Pointless, but that's what the original person who wrote the script wanted
  mapper.speedWalkDir = speedWalkDir
  mapper.onSpeedWalk()
end

function mapper.onSpeedWalk()
  if not mapper.isSpeedWalking() then
    return
  end
  command = mapper.speedWalkDir[1]
  if mapper.isExecutingInterruptionHandler() then
    local params = command:split(mapper.handlableInterruptionHeader)
    local eventName = params[1]
    table.remove(params, 1)
    raiseEvent(eventName, unpack(params))
  else
    send(command)
    table.remove(mapper.speedWalkDir, 1)
    if #mapper.speedWalkDir == 0 then
      mapper.speedWalkDir = nil
    end
  end
end

function mapper.stopSpeedWalking()
  if mapper.isSpeedWalking() then
    mapper.speedWalkDir = nil
    raiseEvent("stopSpeedWalk")
    mapper.prompt("Interrupting speedwalk...")
  else
    mapper.prompt("We're not speedwalking.")
  end
end

function mapper.isSpeedWalking()
  return mapper.speedWalkDir ~= nil and #mapper.speedWalkDir &gt; 0
 end

function mapper.isExecutingInterruptionHandler()
  return command:find(mapper.handlableInterruptionHeader)
end

function mapper.handledHandlableInterruption()
    table.remove(mapper.speedWalkDir, 1)
    mapper.onSpeedWalk()
end</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Event handlers</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>mapper.gmcpInfoReceived</name>
					<packageName></packageName>
					<script>function mapper.gmcpInfoReceived()
  if not mapper.isSailing() then
    mapper.resetCapturedInfo()
    mapper.capturedInfo.hashID = gmcp.room.info.id
    mapper.capturedInfo.name = gmcp.room.info.short
    mapper.capturedInfo.exits = gmcp.room.info.exits
    mapper.capturedInfo.x = gmcp.room.info.x
    mapper.capturedInfo.y = gmcp.room.info.y
    mapper.capturedInfo.zoomx = gmcp.room.info.zoomx
    mapper.capturedInfo.zoomy = gmcp.room.info.zoomy
    mapper.roomInfoUpdated()
  end
end</script>
					<eventHandlerList>
						<string>gmcp.room.info</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Ship Lines</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>init</name>
					<packageName></packageName>
					<script>mapper.shipLines = mapper.shipLines or {}

mapper.shipLines.handlerName = "shipLines"
mapper.shipLines.travelStage = mapper.shipLines.travelStage or 0

mapper.config.shipLines = mapper.config.shipLines or {}
mapper.config.shipLinesData = mapper.config.shipLinesData or {}

mapper.config.shipLinesData.buyTicketCommand = mapper.config.shipLinesData.buyTicketCommand or "buy ticket"
mapper.config.shipLinesData.boardCommand = mapper.config.shipLinesData.boardCommand or "board ship"</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Control</name>
					<packageName></packageName>
					<script>function mapper.shipLines.addLine(line)
  if mapper.config.shipLines[line] then
    mapper.prompt("This line already exists.")
  else
    mapper.config.shipLines[line] = {}
    mapper.shipLines.displayStops(line)
    mapper.save()
  end
end

function mapper.shipLines.deleteLine(line)
  if mapper.config.shipLines[line] then
    for hashID, stopName in pairs(mapper.config.shipLines[line]) do
      mapper.shipLines.deleteSpecialExits(line, hashID)
    end
    mapper.config.shipLines[line] = nil
    mapper.shipLines.displayAll()
    mapper.save()
  else
    mapper.prompt("The line doesn't exist.")
  end
end

function mapper.shipLines.setLineExit(line, hashID, stopName)
  if mapper.currentRoomID == -1 then
    mapper.prompt("The room must be mapped to set an exit here.")
    return
  end
  local oldName = mapper.config.shipLines[line][hashID]
  local newName = stopName or oldName or ""
  mapper.config.shipLines[line][hashID] = newName
  
  if newName == "" then
    mapper.prompt("Detected a ShipLine exit, but it's not associated with a stop name.")
    mapper.prompt("You can set the stop name using \"mmap slre (name)\"")
  elseif oldName ~= newName then
    mapper.prompt("Updated ShipLine stop (#" .. hashID .. "|" .. newName .. ")")
    mapper.shipLines.displayStops(line)
  end
  if getRoomIDbyHash(hashID) ~= -1 then
    mapper.shipLines.addSpecialExits(line, hashID)
  end
  mapper.save()
end

function mapper.shipLines.deleteLineExit(line, hashID)
  if mapper.config.shipLines[line] then
    mapper.shipLines.deleteSpecialExits(line, hashID)
    mapper.config.shipLines[line][hashID] = nil
    mapper.shipLines.displayStops(line)
  else
    mapper.prompt("The line doesn't exist.")
  end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Common</name>
					<packageName></packageName>
					<script>function mapper.shipLines.getLineFromHashID(hashID)
  for line, exits in pairs(mapper.config.shipLines) do
    if exits[hashID] then
      return line
    end
  end
end

function mapper.shipLines.addSpecialExits(line, exitHashID)
  local stopName = line[exitHashID]
  for otherExitHashID, otherStopName in pairs(mapper.config.shipLines[line]) do
    if exitHashID ~= otherExitHashID then
      if stopName ~= "" then
        mapper.shipLines.addSpecialExit(otherExitHashID, exitHashID, line)
      end
      if otherStopName ~= "" then
        mapper.shipLines.addSpecialExit(exitHashID, otherExitHashID, line)
      end
    end
  end
end

function mapper.shipLines.addSpecialExit(fromHashID, toHashID, line)
  local fromID = getRoomIDbyHash(fromHashID)
  local toID = getRoomIDbyHash(toHashID)
  local specialExit =
    table.concat(
      {mapper.shipLines.handlerName, fromHashID, toHashID, line}, mapper.handlableInterruptionHeader
    )
  if fromID and toID then
    addSpecialExit(fromID, toID, specialExit)
  end
end

function mapper.shipLines.deleteSpecialExits(line, hashID)
  local roomID = getRoomIDbyHash(hashID)
  if not roomID then
    mapper.prompt("The room doesn't exist.")
  end
  for exit, toID in pairs(getSpecialExitsSwap(roomID)) do
    display(exit)
    if exit:ends(line) then
      removeSpecialExit(roomID, exit)
    end
  end
  for otherHashID, stopName in pairs(mapper.config.shipLines[line]) do
    if otherHashID ~= hashID then
      for exit, toID in pairs(getSpecialExitsSwap(roomID)) do
        if exit:ends(line) and exit:find(hashID) then
          removeSpecialExit(toID, exit)
        end
      end
    end
  end
end

function mapper.shipLines.setCoinsContainer(name)
  if name == "none" then
    mapper.config.shipLinesData.coinsContainer = nil
    mapper.prompt("Cleared coins container.")
  else
    mapper.config.shipLinesData.coinsContainer = name
    mapper.prompt("Set coins container to: " .. name .. ".")
  end
  mapper.save()
end

function mapper.shipLines.setBuyTicketCommand(command)
  mapper.config.shipLinesData.buyTicketCommand = command
  mapper.prompt("Set the ticket buying command to: " .. command)
  mapper.save()
end

function mapper.shipLines.setBoardShipCommand(command)
  mapper.config.shipLinesData.boardCommand = command
  mapper.prompt("Set the boarding command to: " .. command)
  mapper.save()
end

function mapper.shipLines.getStopCount(line)
  local count = 0
  for _ in pairs(mapper.config.shipLines[line] or {}) do
    count = count + 1
  end
  return count
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Interruption Handler</name>
					<packageName></packageName>
					<script>local firstTriggerName = "shipLines.BuyTicket"
local stageCount = 3
local travelStage = travelStage or 0

function mapper.shipLines.nextTravelStage()
  mapper.shipLines.travelStage = mapper.shipLines.travelStage + 1
  if mapper.shipLines.travelStage &gt; stageCount then
    mapper.shipLines.haltTravel()
    mapper.handledHandlableInterruption()
  elseif mapper.shipLines.travelStage == 1 then
    mapper.shipLines.buyTicket()
  elseif mapper.shipLines.travelStage == 2 then
    send(mapper.config.shipLinesData.boardCommand)
  elseif mapper.shipLines.travelStage == 3 then
    send("disembark")
  end
end

function mapper.shipLines.travel(handlerName, fromHashID, toHashID, line)
  mapper.shipLines.currentLine = line
  if mapper.shipLines.travelStage == 0 then
    mapper.shipLines.nextTravelStage()
    mapper.shipLines.travelDestination = mapper.config.shipLines[line][toHashID]
  elseif mapper.shipLines.travelStage == 3 then
    mapper.shipLines.nextTravelStage()
  end
end

function mapper.shipLines.haltTravel()
  mapper.shipLines.currentLine = nil
  mapper.shipLines.travelStage = 0
  mapper.shipLines.travelDestination = nil
end

function mapper.shipLines.buyTicket()
  if mapper.config.shipLinesData.coinsContainer then
    send("get coins from " .. mapper.config.shipLinesData.coinsContainer)
  end
  send(mapper.config.shipLinesData.buyTicketCommand)
  if mapper.config.shipLinesData.coinsContainer then
    send("put coins in " .. mapper.config.shipLinesData.coinsContainer)
  end
end

registerAnonymousEventHandler(mapper.shipLines.handlerName, [[mapper.shipLines.travel]])
registerAnonymousEventHandler("stopSpeedWalk", [[mapper.shipLines.haltTravel]])</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Display</name>
					<packageName></packageName>
					<script>local width = 60
local sep = "-"

function mapper.shipLines.displayAll()
  echo("\n\n\n")
  mapper.ui.echoMenuLine({["width"] = width, ["separator"] = sep})
  mapper.ui.echoMenuLine(
    {
      ["width"] = width,
      ["separator"] = sep,
      ["header"] = "(Shiplines)",
      ["buttons"] =
        {
          {
            text = "+",
            func = [[clearCmdLine() appendCmdLine("mmap sl new line ")]],
            tooltip = "New shipline",
          },
        },
    }
  )
  local lineNumber = 0
  for name, line in pairs(mapper.config.shipLines) do
    lineNumber = lineNumber + 1
    mapper.ui.echoMenuLine(
      {
        ["width"] = width,
        ["separator"] = " ",
        ["header"] = lineNumber..") "..name,
        ["headerTooltip"] = "Show stops",
        ["headerFunction"] = string.format([[mapper.shipLines.displayStops("%s")]], name),
        colors = {header = "khaki"},
        buttons =
          {
            {
              text = "-",
              func = string.format([[mapper.shipLines.deleteLine("%s")]], name),
              tooltip = "Delete line: " .. name,
              secondaryColor = "red",
            },
          },
      }
    )
  end
  mapper.ui.echoMenuLine({["width"] = width, ["separator"] = sep})
  mapper.ui.echoMenuLine({["width"] = width, ["separator"] = sep})
end

function mapper.shipLines.displayStops(line)
  echo("\n\n\n")
  mapper.ui.echoMenuLine({["width"] = width, ["separator"] = sep})
  mapper.ui.echoMenuLine(
    {
      ["width"] = width,
      ["header"] = line,
      ["separator"] = sep,
      ["headerTooltip"] = "Show stops",
      ["headerFunction"] = string.format([[mapper.shipLines.displayStops("%s")]], line),
      buttons =
        {
          {
            text = "+",
            func =
              string.format(
                [[clearCmdLine() appendCmdLine("mmap sl set stop of %s at here with name ")]], line
              ),
            tooltip = "New stop",
          },
          {
            text = "-",
            func = string.format([[mapper.shipLines.deleteLine("%s")]], line),
            tooltip = "Delete: " .. line,
            secondaryColor = "red",
          },
        },
    }
  )
  for hashID, stopName in pairs(mapper.config.shipLines[line]) do
    local roomID = getRoomIDbyHash(hashID)
    mapper.ui.echoMenuLine(
      {
        ["width"] = width,
        ["separator"] = " ",
        ["header"] = stopName .. "(" .. roomID .. ")",
        ["headerFunction"] = string.format([[centerview(%d)]], roomID),
        ["headerTooltip"] = "Locate",
        colors = {header = "khaki"},
        buttons =
          {
            {
              text = "r",
              func =
                string.format(
                  [[clearCmdLine() appendCmdLine("mmap sl set stop of %s at %d with name ")]],
                  line,
                  getRoomIDbyHash(hashID)
                ),
              tooltip = "Reset stop name: " .. stopName,
            },
            {
              text = "-",
              func = string.format([[mapper.shipLines.deleteLineExit("%s", "%s")]], line, hashID),
              tooltip = "Delete: " .. stopName,
              secondaryColor = "red",
            },
          },
      }
    )
  end
  mapper.ui.echoMenuLine({["width"] = width, ["separator"] = sep})
  mapper.ui.echoMenuLine({["width"] = width, ["separator"] = sep})
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Generic Handler</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>init</name>
					<packageName></packageName>
					<script>mapper.genericHandler = mapper.genericHandler or {}

mapper.genericHandler.eventName = "genericHandler"
mapper.config.genericHandler = mapper.config.genericHandler or {}
mapper.genericHandler.stageNumber = mapper.genericHandler.stageNumber or 0
mapper.genericHandler.activeTriggers = mapper.genericHandler.activeTriggers or {}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>GHDisplay</name>
					<packageName></packageName>
					<script>local width = 50

local function echoMenuLine(
  text, textColor, separator, buttonText, buttonFunction, buttonTooltip, textFunction, textTooltip
)
  mapper.ui.echoMenuLine(
    {
      ["width"] = width,
      ["header"] = text,
      ["separator"] = separator,
      ["headerFunction"] = textFunction,
      ["headerTooltip"] = textTooltip,
      ["colors"] = {header = textColor, separator = "grey"},
      ["buttons"] = {{text = buttonText, func = buttonFunction, tooltip = buttonTooltip}},
    }
  )
end

local function echoMenuHeader(text, buttonFunction, buttonTooltip, textFunction, textTooltip)
  echoMenuLine(text, "yellow", "-", "+", buttonFunction, buttonTooltip, textFunction, textTooltip)
end

local function echoMenuItem(text, buttonFunction, buttonTooltip, textFunction, textTooltip)
  echoMenuLine(text, "white", " ", "-", buttonFunction, buttonTooltip, textFunction, textTooltip)
end

local function echoSplitter()
  echo(string.rep("-", width) .. "\n")
end

function mapper.genericHandler.displayMenuList(
  data,
  headerName,
  headerColor,
  headerSeparator,
  itemColor,
  itemSeparator,
  addButtonFunction,
  addButtonTooltip,
  deleteButtonFunction,
  deleteButtonTooltip
)
  echoMenuLine(headerName, headerColor, headerSeparator, "+", addButtonFunction, addButtonTooltip)
  for i, item in ipairs(data) do
    echoMenuLine(
      i .. ") " .. data[i],
      itemColor,
      itemSeparator,
      "-",
      string.format(deleteButtonFunction, i),
      deleteButtonTooltip
    )
  end
end

function mapper.genericHandler.displayHandlers()
  echo("\n")
  echoSplitter()
  echoMenuHeader("(Handlers)", [[clearCmdLine() appendCmdLine("mmap gh new ")]], "New handler")
  for name, _ in pairs(mapper.config.genericHandler) do
    echoMenuItem(
      name,
      "mapper.genericHandler.deleteHandler(\"" .. name .. "\")",
      "Delete handler",
      "mapper.genericHandler.displayHandler(\"" .. name .. "\")",
      "Edit"
    )
  end
  echoSplitter()
  echoSplitter()
end

function mapper.genericHandler.displayHandler(handlerName)
  echo("\n")
  echoSplitter()
  --header
  echoMenuLine(
    "(" .. handlerName .. ")",
    "yellow",
    "-",
    "-",
    "mapper.genericHandler.deleteHandler(\"" .. handlerName .. "\")",
    "Delete handler"
  )
  -- FromID
  local fromHashID = mapper.config.genericHandler[handlerName].fromHashID
  echoMenuLine(
    "Starting point ID: " .. (fromHashID and getRoomIDbyHash(fromHashID) or "unknown"),
    "white",
    " ",
    "set",
    string.format([[clearCmdLine() appendCmdLine("mmap gh set %s from here")]], handlerName),
    [[You can change "here" to the target RoomID]],
    fromHashID and string.format([[centerview(getRoomIDbyHash("%s"))]], fromHashID) or nil,
    "locate"
  )
  -- ToID
  local toHashID = mapper.config.genericHandler[handlerName].toHashID
  echoMenuLine(
    "End point ID: " .. (toHashID and getRoomIDbyHash(toHashID) or "unknown"),
    "white",
    " ",
    "set",
    string.format([[clearCmdLine() appendCmdLine("mmap gh set %s to here")]], handlerName),
    [[You can change "here" to the target RoomID]],
    toHashID and string.format([[centerview(getRoomIDbyHash("%s"))]], toHashID) or nil,
    "locate"
  )
  -- Stages
  echoSplitter()
  echoMenuHeader(
    "Stages", "mapper.genericHandler.addStage(\"" .. handlerName .. "\")", "Add a stage"
  )
  for i = 1, #mapper.config.genericHandler[handlerName].stages do
    mapper.genericHandler.displayStage(handlerName, i)
  end
  echoSplitter()
  echoSplitter()
end

function mapper.genericHandler.displayStage(handlerName, stageNumber)
  local stage = mapper.config.genericHandler[handlerName].stages[stageNumber]
  echoMenuLine(
    "Stage #" .. stageNumber,
    "white",
    "-",
    "-",
    string.format([[mapper.genericHandler.deleteStage("%s", %d)]], handlerName, stageNumber),
    [[You can change "here" to the target RoomID]]
  )
  mapper.genericHandler.displayStageTriggers(handlerName, stageNumber)
  mapper.genericHandler.displayStageActions(handlerName, stageNumber)
end

function mapper.genericHandler.displayStageTriggers(handlerName, stageNumber)
  local stage = mapper.config.genericHandler[handlerName].stages[stageNumber]
  mapper.genericHandler.displayMenuList(
    stage.triggers,
    "Triggers:",
    "khaki",
    " ",
    "white",
    " ",
    string.format(
      [[clearCmdLine() appendCmdLine("mmap gh add trigger to %s at stage %d with substring ")]],
      handlerName,
      stageNumber
    ),
    "New trigger",
    string.format([[mapper.genericHandler.deleteTrigger("%s", %d, %%d)]], handlerName, stageNumber),
    "Delete trigger"
  )
end

function mapper.genericHandler.displayStageActions(handlerName, stageNumber)
  local stage = mapper.config.genericHandler[handlerName].stages[stageNumber]
  mapper.genericHandler.displayMenuList(
    stage.actions,
    "Actions:",
    "khaki",
    " ",
    "white",
    " ",
    string.format(
      [[clearCmdLine() appendCmdLine("mmap gh add action to %s at stage %d with command ")]],
      handlerName,
      stageNumber
    ),
    "New action",
    string.format([[mapper.genericHandler.deleteAction("%s", %d, %%d)]], handlerName, stageNumber),
    "Delete action"
  )
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Common</name>
					<packageName></packageName>
					<script>function mapper.genericHandler.newHandler(name)
  name = name:trim()
  if mapper.config.genericHandler[name] then
    mapper.prompt("There is already a handler with this name.")
  else
    mapper.config.genericHandler[name] = {}
    mapper.config.genericHandler[name].stages = {}
  end
  mapper.save()
  mapper.genericHandler.displayHandlers()
end

function mapper.genericHandler.verifyHandler(name)
  if mapper.config.genericHandler[name] then
    return true
  else
    mapper.prompt("The handler was not found :/")
    return false
  end
end

function mapper.genericHandler.verifyStage(handlerName, stageNumber)
  if not mapper.genericHandler.verifyHandler(handlerName) then
    return false
  elseif mapper.config.genericHandler[handlerName].stages[stageNumber] then
    return true
  else
    mapper.prompt("The stage was not found :/")
    return false
  end
end

function mapper.genericHandler.verifyTrigger(handlerName, stageNumber, triggerNumber)
  if not mapper.genericHandler.verifyStage(handlerName, stageNumber) then
    return false
  elseif mapper.config.genericHandler[handlerName].stages[stageNumber].triggers[triggerNumber] then
    return true
  else
    mapper.prompt("The trigger was not found :/")
    return false
  end
end

function mapper.genericHandler.verifyAction(handlerName, stageNumber, actionNumber)
  if not mapper.genericHandler.verifyStage(handlerName, stageNumber) then
    return false
  elseif mapper.config.genericHandler[handlerName].stages[stageNumber].actions[actionNumber] then
    return true
  else
    mapper.prompt("The action was not found :/")
    return false
  end
end

function mapper.genericHandler.deleteHandler(name)
  if mapper.genericHandler.verifyHandler(name) then
    mapper.genericHandler.deleteSpecialExit(name)
    mapper.config.genericHandler[name] = nil
    mapper.save()
    mapper.genericHandler.displayHandlers()
  end
end

function mapper.genericHandler.setFromID(handlerName, exit)
  exit = exit == "here" and mapper.capturedInfo.hashID or getRoomHashByID(tonumber(exit))
  if getRoomIDbyHash(exit) == -1 then
    mapper.prompt("The room was not found :/")
  elseif mapper.genericHandler.verifyHandler(handlerName) then
    mapper.genericHandler.deleteSpecialExit(handlerName)
    mapper.config.genericHandler[handlerName].fromHashID = exit
    mapper.genericHandler.addSpecialExit(handlerName)
    mapper.save()
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.setToID(handlerName, exit)
  exit = exit == "here" and mapper.capturedInfo.hashID or getRoomHashByID(tonumber(exit))
  if getRoomIDbyHash(exit) == -1 then
    mapper.prompt("The room was not found :/")
  elseif mapper.genericHandler.verifyHandler(handlerName) then
    mapper.genericHandler.deleteSpecialExit(handlerName)
    mapper.config.genericHandler[handlerName].toHashID = exit
    mapper.genericHandler.addSpecialExit(handlerName)
    mapper.save()
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.addSpecialExit(handlerName)
  local fromHashID = mapper.config.genericHandler[handlerName].fromHashID
  local toHashID = mapper.config.genericHandler[handlerName].toHashID
  if fromHashID and toHashID and fromHashID ~= toHashID then
    local fromID = getRoomIDbyHash(fromHashID)
    local toID = getRoomIDbyHash(toHashID)
    if fromID ~= -1 and toID ~= -1 then
      local specialExit = mapper.genericHandler.getSpecialExit(handlerName)
      addSpecialExit(fromID, toID, specialExit)
    end
  end
end

function mapper.genericHandler.deleteSpecialExit(handlerName)
  local fromHashID = mapper.config.genericHandler[handlerName].fromHashID
  if fromHashID then
    local fromID = getRoomIDbyHash(fromHashID)
    removeSpecialExit(fromID, mapper.genericHandler.getSpecialExit(handlerName))
    local toHashID = mapper.config.genericHandler[handlerName].toHashID
    if toHashID then
      local toID = getRoomIDbyHash(toHashID)
      for exit, exitToID in pairs(getSpecialExitsSwap(fromID)) do
        if toID == exitToID then
          removeSpecialExit(fromID, exit)
        end
      end
    end
  end
end

function mapper.genericHandler.getSpecialExit(handlerName)
  return
    table.concat(
      {
        mapper.genericHandler.eventName,
        handlerName,
        mapper.config.genericHandler[handlerName].toHashID,
      },
      mapper.handlableInterruptionHeader
    )
end

function mapper.genericHandler.addStage(handlerName)
  local handler = mapper.config.genericHandler[handlerName]
  if mapper.genericHandler.verifyHandler(handlerName) then
    table.insert(handler.stages, {["triggers"] = {}, ["actions"] = {}})
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.deleteStage(handlerName, stageNumber)
  local handler = mapper.config.genericHandler[handlerName]
  if mapper.genericHandler.verifyStage(handlerName, stageNumber) then
    table.remove(handler.stages, stageNumber)
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.addTrigger(handlerName, stageNumber, substring)
  local handler = mapper.config.genericHandler[handlerName]
  if mapper.genericHandler.verifyStage(handlerName, stageNumber) then
    table.insert(handler.stages[stageNumber].triggers, substring)
    mapper.save()
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.addAction(handlerName, stageNumber, action)
  local handler = mapper.config.genericHandler[handlerName]
  if mapper.genericHandler.verifyStage(handlerName, stageNumber) then
    table.insert(handler.stages[stageNumber].actions, action)
    mapper.save()
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.deleteTrigger(handlerName, stageNumber, triggerNumber)
  local handler = mapper.config.genericHandler[handlerName]
  if mapper.genericHandler.verifyTrigger(handlerName, stageNumber, triggerNumber) then
    table.remove(handler.stages[stageNumber].triggers, triggerNumber)
    mapper.save()
    mapper.genericHandler.displayHandler(handlerName)
  end
end

function mapper.genericHandler.deleteAction(handlerName, stageNumber, actionNumber)
  local handler = mapper.config.genericHandler[handlerName]
  if mapper.genericHandler.verifyAction(handlerName, stageNumber, actionNumber) then
    table.remove(handler.stages[stageNumber].actions, actionNumber)
    mapper.save()
    mapper.genericHandler.displayHandler(handlerName)
  end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Handle</name>
					<packageName></packageName>
					<script>function mapper.genericHandler.travel(_, handlerName, toHashID)
  if mapper.genericHandler.stageNumber == 0 then
    mapper.genericHandler.incrementStage(handlerName)
  end
end

function mapper.genericHandler.haltTravel()
  mapper.genericHandler.stageNumber = 0
  mapper.genericHandler.killActiveTriggers()
end

function mapper.genericHandler.executeStage(handlerName, stageNumber)
  local stage = mapper.config.genericHandler[handlerName].stages[stageNumber]
  for _, item in pairs(stage.actions) do
    expandAlias(item)
  end
  mapper.genericHandler.killActiveTriggers()
  mapper.genericHandler.incrementStage(handlerName)
end

function mapper.genericHandler.incrementStage(handlerName)
  local stages = mapper.config.genericHandler[handlerName].stages
  mapper.genericHandler.stageNumber = mapper.genericHandler.stageNumber + 1
  if mapper.genericHandler.stageNumber &gt; #stages then
    mapper.genericHandler.haltTravel()
    mapper.handledHandlableInterruption()
  else
    local stage = stages[mapper.genericHandler.stageNumber]
    if #stage.triggers == 0 then
      mapper.genericHandler.executeStage(handlerName, mapper.genericHandler.stageNumber)
    else
      for i, substring in pairs(stage.triggers) do
        local command =
          string.format([[mapper.genericHandler.executeStage("%s", %d)]], handlerName, mapper.genericHandler.stageNumber)
        local trigger = tempTrigger(substring, command, 1)
        table.insert(mapper.genericHandler.activeTriggers, trigger)
      end
    end
  end
end

function mapper.genericHandler.killActiveTriggers()
  for _, triggerID in pairs(mapper.genericHandler.activeTriggers) do
    killTrigger(triggerID)
  end
  mapper.genericHandler.activeTriggers = {}
end

registerAnonymousEventHandler("stopSpeedWalk", [[mapper.genericHandler.haltTravel]])
registerAnonymousEventHandler(mapper.genericHandler.eventName, [[mapper.genericHandler.travel]])</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>ui</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>menu line</name>
					<packageName></packageName>
					<script>mapper.ui = mapper.ui or {}
-- line = {
--   width = 50, -- required
--   separator = "-", -- required
--   header = "Bluh", -- optional
--   headerFunction = xyz, -- optional
--   headerTooltip = "bluh", -- optional
--   colors = { -- optional
--     separator = "white", -- optional
--     header = "yellow", -- optional
--     mainButtonColor = "white", --optional
--     secondButtonColor = "blue", --optional
--   },
--   buttons { -- optional
--     { -- optional
--        text, -- required
--        func  -- required,
--        tooltip, -- optional
--        mainColor -- optional
--        secondaryColor -- optional
--     },
--   }
-- }

local function getButtonsLength(buttons)
  local length = 0
  for i, button in ipairs(buttons or {}) do
    length = length + #button.text + 3
    -- (, ), sep
  end
  return length
end

local function getHeaderColor(line)
  return line.colors and line.colors.header or "yellow"
end

local function getSeparatorColor(line)
  return line.colors and line.colors.separator or "white"
end

local function getButtonMainColor(line, buttonNumber)
  return
    line.buttons[buttonNumber].mainColor or (line.colors and line.colors.mainButtonColor) or "white"
end

local function getButtonSecondaryColor(line, buttonNumber)
  return
    line.buttons[buttonNumber].secondaryColor or
    (line.colors and line.colors.secondaryButtonColor) or
    "blue"
end

function mapper.ui.echoMenuLine(line)
  local width = line.width
  local buttonsWidth = getButtonsLength(line.buttons)
  cecho(string.format([[&lt;%s&gt;%s]], getSeparatorColor(line), line.separator:rep(2)))
  width = width - 2
  if line.header then
    line.header =
      mapper.ui.padAndTruncate(line.header, math.min(#line.header, width - buttonsWidth - 1))
    -- 1: (the last sep)
    local header = string.format([[&lt;%s&gt;%s]], getHeaderColor(line), line.header)
    width = width - #line.header
    if line.headerFunction then
      cechoLink(header, line.headerFunction, line.headerTooltip or "", true)
    else
      cecho(header)
    end
  end
  width = width - buttonsWidth - 1
  -- 1: (the last sep)
  cecho(string.format([[&lt;%s&gt;%s]], getSeparatorColor(line), line.separator:rep(width)))
  for i, button in pairs(line.buttons or {}) do
    local mainButtonColor = getButtonMainColor(line, i)
    local secondButtonColor = getButtonSecondaryColor(line, i)
    cecho(string.format([[&lt;%s&gt;(]], secondButtonColor))
    cechoLink(
      string.format([[&lt;%s&gt;%s]], mainButtonColor, button.text),
      button.func,
      button.tooltip or "",
      true
    )
    cecho(string.format([[&lt;%s&gt;)]], secondButtonColor))
    cecho(string.format([[&lt;%s&gt;%s]], getSeparatorColor(line), line.separator))
  end
  cecho(string.format([[&lt;%s&gt;%s]], getSeparatorColor(line), line.separator))
  echo("\n")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>common</name>
					<packageName></packageName>
					<script>
function mapper.ui.padAndTruncate(str, maxSize)
  if str:len() &gt; maxSize then
    return str:sub(1, maxSize - 3) .. "..."
  else
    return string.format("%-" .. maxSize .. "s", str)
  end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>Instructions</name>
				<packageName></packageName>
				<script>--***IMPORTANT****   ensure that Generic mapper has been uninstalled


--turn mapper on or off &lt;mmap on&gt; or &lt;mmap off&gt;
--to set new area in next room &lt;mmap an area_name&gt;
--to set new area in current room &lt;mmap anh area_name&gt;
--check alias's for more commands

--shiplines works by having both areas mapped then read genesis shiplines sign on both sides
--you do have to set your payment method for boarding so if in money-sack or whatever
--i dont use this method as it can be a bit buggy with if you map boats and just gets confusing if not speedwalking

--generic handler is a better method but slightly more labor intensive
--type in &lt;mmap gh&gt; and you can set start and finish rooms by clicking on the + sign
--then set action to &lt;your buy ticket alias&gt; or whatever at stage 1
--stage 2 set trigger to disembark and then action disembark all in stage 2
--then you are done, thats speedwalking from one area to another

--generic handler can be used in any situation that requires muliple stages to move from one room to another
--such as for example knocking on gates, or even more complex entering the gnomes guild with the elevator
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>readme</name>
			<packageName></packageName>
			<script>--GUI/
------Set Borders - Change the way mudlet sets the main window.
------Create Background - Edit the gray borders.
------Header Icons - Edit clickable icons or add new ones.
------Boxes - Edit other containers(NOT GAUGES).
--MagicMap/
-----------map_area - Changes  the map container or font size.
-----------my_map - Edit map properties.
-----------mudlet_map - Embeds mudlet mapper.
--ChatBox/
----------chat_area - Sets chat font and window size.
----------get_chat - Change how the client interacts with chat messages.
--Wlist/
-------Infoscreen/
------------------The Model - Backend of Wlist. Not worth editing for most.
------------------The View - Change the display of Wlist
-------Set up - updates Wlist info.
--Vitals/
---------SetVitals - Changes vital info into numbers and puts them in gagues.
---------SetStatus - Changes status info into numbers.
---------GMCP_Vitals - Retrieve vitals via GMCP.
---------GMCP_Status - Retrieve status via GMCP.
---------Gagues - Sets the appearance of gagues.
--Misc/
-------DarkThemeUninstall - Reverts to original theme on any package unintall.
-------DarkTheme - Makes mudlet usable.
-------CSSman - Sets up GUI functionality.
--Basics/
---------commandQueue - &lt;do&gt; but better.
---------wartables - Wargem translator
---------tables - imbuement translator

--GenesisMapper - Mapper made for Genesis.
--If you want to modify your package, look at the free resources on
--https://wiki.mudlet.org/ and use the lua commands for Genesis like &lt;lua gmcp&gt;.
--Package made by Skythus using Akaya GUI template and various mudlet packages
--distributed on the GenesisMUD forums. For help customizing: discord Caleb#5350

</script>
			<eventHandlerList>
				<string>gmcp.char.login</string>
			</eventHandlerList>
		</Script>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>sailing</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>sail n</name>
				<packageName></packageName>
				<script></script>
				<command>sail n</command>
				<keyCode>56</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail ne</name>
				<packageName></packageName>
				<script></script>
				<command>sail ne</command>
				<keyCode>57</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail e</name>
				<packageName></packageName>
				<script></script>
				<command>sail e</command>
				<keyCode>54</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail se</name>
				<packageName></packageName>
				<script></script>
				<command>sail se</command>
				<keyCode>51</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail s</name>
				<packageName></packageName>
				<script></script>
				<command>sail s</command>
				<keyCode>50</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail sw</name>
				<packageName></packageName>
				<script></script>
				<command>sail sw</command>
				<keyCode>49</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail w</name>
				<packageName></packageName>
				<script></script>
				<command>sail w</command>
				<keyCode>52</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sail nw</name>
				<packageName></packageName>
				<script></script>
				<command>sail nw</command>
				<keyCode>55</keyCode>
				<keyModifier>671088640</keyModifier>
			</Key>
		</KeyGroup>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>general</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>north</name>
				<packageName></packageName>
				<script></script>
				<command>n</command>
				<keyCode>56</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>ne</name>
				<packageName></packageName>
				<script></script>
				<command>ne</command>
				<keyCode>57</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>e</name>
				<packageName></packageName>
				<script></script>
				<command>e</command>
				<keyCode>54</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>se</name>
				<packageName></packageName>
				<script></script>
				<command>se</command>
				<keyCode>51</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>s</name>
				<packageName></packageName>
				<script></script>
				<command>s</command>
				<keyCode>50</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sw</name>
				<packageName></packageName>
				<script></script>
				<command>sw</command>
				<keyCode>49</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>w</name>
				<packageName></packageName>
				<script></script>
				<command>w</command>
				<keyCode>52</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>nw</name>
				<packageName></packageName>
				<script></script>
				<command>nw</command>
				<keyCode>55</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>look</name>
				<packageName></packageName>
				<script></script>
				<command>look</command>
				<keyCode>53</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>in</name>
				<packageName></packageName>
				<script></script>
				<command>in</command>
				<keyCode>47</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>out</name>
				<packageName></packageName>
				<script></script>
				<command>out</command>
				<keyCode>42</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>up</name>
				<packageName></packageName>
				<script></script>
				<command>up</command>
				<keyCode>45</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>down</name>
				<packageName></packageName>
				<script></script>
				<command>down</command>
				<keyCode>43</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>shipon</name>
				<packageName></packageName>
				<script></script>
				<command>shipon</command>
				<keyCode>16777275</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>Health all</name>
				<packageName></packageName>
				<script></script>
				<command>health all</command>
				<keyCode>16777272</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
		</KeyGroup>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>mapping</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>move room n</name>
				<packageName></packageName>
				<script></script>
				<command>rmv n</command>
				<keyCode>56</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room ne</name>
				<packageName></packageName>
				<script></script>
				<command>rmv ne</command>
				<keyCode>57</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room e</name>
				<packageName></packageName>
				<script></script>
				<command>rmv e</command>
				<keyCode>54</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room se</name>
				<packageName></packageName>
				<script></script>
				<command>rmv se</command>
				<keyCode>51</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room s</name>
				<packageName></packageName>
				<script></script>
				<command>rmv s</command>
				<keyCode>50</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room sw</name>
				<packageName></packageName>
				<script></script>
				<command>rmv sw</command>
				<keyCode>49</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room w</name>
				<packageName></packageName>
				<script></script>
				<command>rmv w</command>
				<keyCode>52</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room nw</name>
				<packageName></packageName>
				<script></script>
				<command>rmv nw</command>
				<keyCode>55</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room up</name>
				<packageName></packageName>
				<script></script>
				<command>rmv up</command>
				<keyCode>45</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>move room down</name>
				<packageName></packageName>
				<script></script>
				<command>rmv down</command>
				<keyCode>43</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
		</KeyGroup>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
	</VariablePackage>
</MudletPackage>
